{
  "AcceleratorRange.EightG": "El acelerómetro mide fuerzas de hasta 8 g de gravedad.",
  "AcceleratorRange.FourG": "El acelerómetro mide fuerzas de hasta 4 g de gravedad.",
  "AcceleratorRange.OneG": "El acelerómetro mide fuerzas de hasta 1 g de gravedad.",
  "AcceleratorRange.TwoG": "El acelerómetro mide fuerzas de hasta 2 g de gravedad.",
  "Array": "Adiciona, remueve y sustituye ítems de la lista. Adiciona, remueve y sustituye ítems de la lista.",
  "Array.every": "Verifica si todos los elementos del array pasan el test implementado por la función provista.",
  "Array.every|param|callbackfn": "Una función que acepta hasta dos argumentos. El método aplica la función de retorno una vez a cada elemento del array.",
  "Array.filter": "Retorna los elementos de un array que atienden la condición especificada en una función de retorno.",
  "Array.filter|param|callbackfn": "Una función que acepta hasta dos argumentos. El método filter llama a la función de retorno una vez para cada elemento del array.",
  "Array.forEach": "Llama determinada función de retorno para cada elemento del array.",
  "Array.forEach|param|callbackfn": "Una función que acepta hasta dos argumentos. El método forEach llama a la función de retorno una vez para cada elemento del array.",
  "Array.get": "Obtiene el valor que está en el índice definido.",
  "Array.get|param|index": "la posición (comenzando por 0) en la lista de ítems, por ejemplo: 0.",
  "Array.indexOf": "Retorna el índice de la primera aparición de un valor de un array.",
  "Array.indexOf|param|fromIndex": "El índice del array en el que debe comenzar la búsqueda. Si el segundo argumento no fue informado, la búsqueda comenzará en el índice 0.",
  "Array.indexOf|param|item": "El valor a localizar en el array.",
  "Array.insertAt": "Inserta el valor en un índice específico y adiciona 1 al largo del array.",
  "Array.insertAt|param|index": "la posición (comenzando en 0) donde insertar el valor, por ejemplo: 0",
  "Array.insertAt|param|value": "a insertar, por ejemplo: 0",
  "Array.join": "reúne todos los elementos de un array en una string y retorna esa string.",
  "Array.join|param|sep": "el separador a ser utilizado en la string",
  "Array.length": "Obtiene o define el largo del array. Este número es una unidad mayor que la posición del último elemento definido en el array.",
  "Array.map": "Aplica la función de retorno para cada elemento del array y retorna un array con los resultados.",
  "Array.map|param|callbackfn": "Una función que acepta hasta dos argumentos. El método map llama a la función de retorno una vez para cada elemento del array.",
  "Array.pop": "Remueve el último elemento de un array y lo retorna.",
  "Array.push": "Anexa un nuevo elemento al final del array.",
  "Array.push|param|item": "a anexar al array.",
  "Array.reduce": "Aplica la función de retorno definida a todos los elementos de un array. El valor devuelto por la función de retorno es el resultado acumulado, que es brindado como argumento en la llamada siguiente de esa función.",
  "Array.reduce|param|callbackfn": "Una función que acepta hasta tres argumentos. El método reduce aplica la función de retorno una vez para cada elemento del array.",
  "Array.reduce|param|initialValue": "Valor inicial para comenzar la acumulación. La primera llamada la función de retorno provee este valor como argumento, en vez de un valor del array.",
  "Array.removeAt": "Remueve el elemento de una posición determinada.",
  "Array.removeAt|param|index": "la posición (comenzando en 0) en la lista, de donde se retira el valor, por ejemplo: 0",
  "Array.removeElement": "Remueve la primera aparición de un objeto. Retornará verdadero si fuese removido.",
  "Array.reverse": "Invierte los elementos de un array. El primer elemento del array se torna el último y el último se torna el primero.",
  "Array.set": "Almacena un valor en un índice específico.",
  "Array.set|param|index": "la posición (comenzando en 0) en la lista donde almacenar el valor, por ejemplo: 0",
  "Array.shift": "Remueve el primer elemento de un array y lo retorna. Este método altera el largo del array.",
  "Array.slice": "Retorna una parte de un array.",
  "Array.slice|param|end": "El final de la parte especificada del array. por ejemplo: 0",
  "Array.slice|param|start": "El inicio de la parte especificada del array. por ejemplo: 0",
  "Array.some": "Verifica si al menos un elemento del array pasa el test implementado por la función provista.",
  "Array.some|param|callbackfn": "Una función que acepta hasta dos argumentos. El método aplica la función de retorno una vez para cada elemento del array.",
  "Array.sort": "Ordena los elementos de un array y retorna el array. El orden no es necesariamente estable.",
  "Array.splice": "Remueve elementos de un array.",
  "Array.splice|param|deleteCount": "El número de elementos a remover. por ejemplo: 0",
  "Array.splice|param|start": "La posición (comenzando en 0) en el array, a partir de donde se inicia la remoción de elementos. por ejemplo: 0",
  "Array.unshift": "Adiciona un elemento al inicio de un array y retorna el nuevo largo del array.",
  "Array.unshift|param|value": "a insertar en el inicio del array.",
  "Boolean.toString": "Retorna la representación de un objeto en formato de string.",
  "Buffer.fill": "Completa (un trecho) del área de memoria temporaria con un determinado valor.",
  "Buffer.getNumber": "Lee, del área de memoria temporaria, un número con formato específico.",
  "Buffer.length": "Retorna el largo de un objeto Buffer (memoria temporaria).",
  "Buffer.rotate": "Gira el contenido del área de memoria temporaria para la izquierda.",
  "Buffer.rotate|param|length": "número de elementos en el área de memoria temporaria. Si fuese negativo, el largo será definido como el largo del área de memoria temporaria menos el inicio. por ejemplo: -1.",
  "Buffer.rotate|param|offset": "número de bytes a desplazar; utiliza un valor negativo para desplazar para la derecha",
  "Buffer.rotate|param|start": "posición de inicio, en el área de memoria temporaria. El estándar es 0.",
  "Buffer.setNumber": "Escribe un número en el formato especificado en el área de memoria temporaria.",
  "Buffer.shift": "Desplaza el contenido del área de memoria temporaria para la izquierda, completando con ceros.",
  "Buffer.shift|param|length": "número de elementos en el área de memoria temporaria. Si fuese negativo, el largo será definido como el largo del área de memoria temporaria menos el inicio. por ejemplo: -1.",
  "Buffer.shift|param|offset": "número de bytes a desplazar; utiliza un valor negativo para desplazar hacia la derecha",
  "Buffer.shift|param|start": "posición de inicio, en el área de memoria temporaria. El estándar es 0.",
  "Buffer.slice": "Retorna la copia de un trecho del área de memoria temporaria.",
  "Buffer.write": "Escribe el contenido de `src` a partir de `dstOffset` en el área de memoria temporaria actual.",
  "EventCreationMode": "Cómo crear el evento.",
  "EventCreationMode.CreateAndFire": "El MicroBitEvent es iniciado y sus manipuladores de eventos son disparados inmediatamente (no adecuado para uso en interrupciones!).",
  "EventCreationMode.CreateOnly": "El MicroBitEvent es iniciado y no ocurre ningún otro procesamiento adicional.",
  "Gesture.EightG": "Activado cuando detecta un choque de 8 g.",
  "Gesture.FreeFall": "Activado cuando la placa está cayendo!",
  "Gesture.LogoDown": "Activado cuando el logotipo está para abajo y el display está en la vertical.",
  "Gesture.LogoUp": "Activado cuando el logotipo está para arriba y el display está en la vertical.",
  "Gesture.ScreenDown": "Activado cuando el display está apuntando para arriba y la placa está en la horizontal.",
  "Gesture.ScreenUp": "Activado cuando el display está apuntando para abajo y la placa está en la horizontal.",
  "Gesture.Shake": "Activado cuando es agitado.",
  "Gesture.SixG": "Activado cuando detecta un choque de 6 g.",
  "Gesture.ThreeG": "Activado cuando detecta un choque de 3 g.",
  "Gesture.TiltLeft": "Activado cuando el display está apuntando para la izquierda.",
  "Gesture.TiltRight": "Activado cuando el display está apuntando para la derecha.",
  "Image.clear": "Apaga todos los píxels.",
  "Image.height": "Obtiene la altura de las líneas (siempre 5).",
  "Image.pixel": "Obtiene el estado del píxel de la posición ``(x,y)``",
  "Image.pixelBrightness": "Obtiene la intensidad de brillo del píxel ([0..255]) de una determinada posición",
  "Image.pixel|param|x": "A hacer",
  "Image.pixel|param|y": "A hacer",
  "Image.plotFrame": "Dibuja, en el display, el n-ésimo cuadro de la imagen.",
  "Image.plotFrame|param|xOffset": "índice de la columna en el que se debe iniciar la exhibición de la imagen",
  "Image.plotImage": "Dibuja la imagen en una determinada columna en el display",
  "Image.scrollImage": "Mueve una imagen.",
  "Image.scrollImage|param|frameOffset": "desplazamiento en el eje X en cada etapa de la animación, por ejemplo: 1, 2, 5 ",
  "Image.scrollImage|param|interval": "tiempo entre cada etapa de la animación en milisegundos, por ejemplo: 200",
  "Image.setPixel": "Define el estado del píxel en la posición ``(x,y)``",
  "Image.setPixelBrightness": "Define un brillo de píxel específico en una determinada posición",
  "Image.setPixel|param|value": "A hacer",
  "Image.setPixel|param|x": "A hacer",
  "Image.setPixel|param|y": "A hacer",
  "Image.showFrame": "Exhibe un cuadro en particular de una imagen grande.",
  "Image.showFrame|param|frame": "A hacer",
  "Image.showImage": "Exhibe un cuadro de la imagen con desplazamiento indicado.",
  "Image.showImage|param|xOffset": "índice de la columna en la que debe iniciar la exhibición de la imagen",
  "Image.width": "Obtiene el ancho en columnas",
  "Math": "Operaciones más complejas con números.",
  "Math.abs": "Retorna el valor absoluto de un número (desconsidera si es positivo o negativo). Por ejemplo, el valor absoluto de -5 es el mismo que el valor absoluto de 5.",
  "Math.abs|param|x": "Una expresión numérica en la que el valor absoluto sea necesario.",
  "Math.ceil": "Retorna el menor número que sea mayor que, o igual a, su argumento numérico.",
  "Math.ceil|param|x": "Una expresión numérica.",
  "Math.floor": "Retorna el mayor número que sea menor que, o igual a, su argumento numérico.",
  "Math.floor|param|x": "Una expresión numérica.",
  "Math.idiv": "Retorna el valor entero de 32 bits con señal resultante de la división de dos números.",
  "Math.idiv|param|x": "El primer número",
  "Math.idiv|param|y": "El segundo número",
  "Math.imul": "Retorna el valor entero de 32 bits con señal resultante de la multiplicación de dos números.",
  "Math.imul|param|x": "El primer número",
  "Math.imul|param|y": "El segundo número",
  "Math.max": "Retorna el mayor resultado dentre dos expresiones numéricas.",
  "Math.min": "Retorna el menor resultado dentre dos expresiones numéricas.",
  "Math.pow": "Retorna el valor de la expresión base elevada a la potencia especificada.",
  "Math.pow|param|x": "El valor base de la expresión.",
  "Math.pow|param|y": "El exponente de la expresión.",
  "Math.random": "Retorna un número aleatorio entre 0 y `límite`.",
  "Math.randomBoolean": "Genera un valor `verdadero` o `falso` aleatoriamente, como lanzar una moneda al aire.",
  "Math.random|param|limit": "el límite superior del número generado, por ejemplo: 4",
  "Math.round": "Retorna el resultado de la expresión numérica suministrada, arredondada para el número más próximo.",
  "Math.round|param|x": "El valor a ser arredondado para el número más próximo.",
  "Math.sign": "Retorna la señal de x, indicando si x es positivo, negativo o cero.",
  "Math.sign|param|x": "La expresión numérica a ser probada",
  "Math.sqrt": "Retorna la raiz cuadrada de un número.",
  "Math.sqrt|param|x": "Una expresión numérica.",
  "Math.trunc": "Retorna el número con la parte decimal cifrada.",
  "Math.trunc|param|x": "Una expresão numérica.",
  "Number.toString": "Retornar o número convertido en string.",
  "String": "Combinar, dividir y buscar strings.",
  "String.charAt": "Retorna el caracter que está en la posición definida.",
  "String.charAt|param|index": "El índice (comenzando en 0) del caracter deseado, por ejemplo: 0",
  "String.charCodeAt": "Retorna el valor Unicode del caracter que está en la posición definida.",
  "String.charCodeAt|param|index": "El índice (comenzando en 0) del caracter deseado. Si no hubiese caracter en la posición definida, retorna NaN (Not a Number\/No es un número).",
  "String.compare": "Compara los caracteres de dos strings (en codificación ASCII). Retorna -1 si la primera es menor, 0 si son iguales, 1 si la primera es la mayor",
  "String.compare|param|that": "String a comparar con la string-objeto",
  "String.concat": "Retorna una string que contiene la concatenación de dos o más strings.",
  "String.concat|param|other": "La string a ser anexada al finalizar la string, por ejemplo: \"!\"",
  "String.fromCharCode": "Crea una string a partir del código de caracteres ASCII suministrado.",
  "String.isEmpty": "Retorna un valor indicando si la string está vacía",
  "String.length": "Retorna el largo de un objeto String.",
  "String.substr": "Retorna una substring de la string actual, iniciando desde la posición indicada, con el tamaño determinado.",
  "String.substr|param|length": "número de caracteres a extraer, por ejemplo: 3",
  "String.substr|param|start": "índice del primer caracter; puede ser negativo con el conteo a partir del final, por ejemplo: 0",
  "basic": "Da acceso a las funciones básicas de la micro:bit.",
  "basic.clearScreen": "Apaga todos los LEDs",
  "basic.forever": "Repite el código siempre, en segundo plano. A cada iteración, permite que otros códigos sean ejecutados.",
  "basic.pause": "Pausa por un período especificado en milisegundos",
  "basic.pause|param|ms": "la duración de la pausa, por ejemplo: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Muestra una imagen en el display de LEDs.",
  "basic.plotLeds|param|leds": "estándar de LEDs para encender\/apagar",
  "basic.showAnimation": "Muestra una secuencia de dibujos como una animación en los LEDs.",
  "basic.showAnimation|param|interval": "tiempo em milisegundos entre cada redibujo",
  "basic.showAnimation|param|leds": "estándar de LEDs para encender\/apagar",
  "basic.showArrow": "Muestra una flecha en el display",
  "basic.showArrow|param|direction": "la dirección de la flecha",
  "basic.showArrow|param|interval": "el tiempo (en milisegundos) para mostrar el ícono. El estándar es 600.",
  "basic.showIcon": "Muestra el ícono seleccionado en el display de LEDs",
  "basic.showIcon|param|icon": "el id del ícono predefinido",
  "basic.showIcon|param|interval": "el tiempo (en milisegundos) para mostrar el ícono. El estándar es 600.",
  "basic.showLeds": "Muestra una imagen en el display de LEDs.",
  "basic.showLeds|param|interval": "tiempo de pausa en milisegundos después de dibujar",
  "basic.showLeds|param|leds": "estándar de LEDs para encender\/apagar",
  "basic.showNumber": "Muestra un número en el display, un dígito por vez. Si el número cabe en el display (o sea, si posee sólo un dígito), será exhibido estático.",
  "basic.showNumber|param|interval": "velocidad del movimiento; por ejemplo: 150, 100, 200, -100",
  "basic.showString": "Muestra texto en el display, un caracter por vez. Si la string cabe en el display (o sea, si posee sólo una letra), será exhibida estática.",
  "basic.showString|param|interval": "velocidad de desplazamiento de caracteres; por ejemplo: 150, 100, 200, -100",
  "basic.showString|param|text": "el texto a moverse en el display, por ejemplo: \"Hola!\"",
  "control": "Tiempo de ejecución y Utilitario de eventos.",
  "control.assert": "Si la condición fuese falsa, mostrará un mensaje en la consola de la puerta serial y generará pánico con código 098.",
  "control.deviceName": "Obtiene un nombre amigable del dispositivo derivado de su número de serie",
  "control.deviceSerialNumber": "Deriva un número de serie único y consistente de este dispositivo a partir de datos internos.",
  "control.eventSourceId": "Devuelve el valor de una constante estándar de C++ que representa la fuente del evento",
  "control.eventTimestamp": "Obtiene el registro de tiempo del último evento ejecutado en el bus",
  "control.eventValue": "Obtiene el valor del último evento ejecutado en el bus",
  "control.eventValueId": "Devuelve el valor de una constante estándar de C++ que representa el evento",
  "control.inBackground": "Programa el código que es ejecutado en segundo plano.",
  "control.onEvent": "Registra un manipulador de eventos.",
  "control.panic": "Exhibe el error especificado y para el programa.",
  "control.raiseEvent": "Activa un evento en el bus de eventos.",
  "control.raiseEvent|param|mode": "definición opcional de cómo el evento debe ser procesado después de construído (el estándar es CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID del Componente MicroBit que generó el evento, o sea: MICROBIT_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Código específico del componente indicando la causa del evento.",
  "control.reset": "Reinicia la BBC micro:bit.",
  "control.runtimeWarning": "Muestra aviso en el simulador.",
  "control.waitMicros": "Bloquea la fibra (línea de ejecución) actual por los microsegundos especificados",
  "control.waitMicros|param|micros": "número de microsegundos a esperar. p.ej.: 4",
  "game": "Una engine de juego con sprite de único LED",
  "game.LedSprite": "Un sprite de juego renderizado como un único LED",
  "game.LedSprite.blink": "Informa la duración del ``parpadear`` de un sprite",
  "game.LedSprite.brightness": "Informa el ``brillo`` de un sprite en el display de LEDs",
  "game.LedSprite.change": "Altera una propiedad del sprite",
  "game.LedSprite.changeBlinkBy": "Altera la duración de ``parpadear`` por la cantidad determinada de milisegundos",
  "game.LedSprite.changeBlinkBy|param|ms": "A hacer",
  "game.LedSprite.changeBrightnessBy": "Altera la posición de ``y`` por la cantidad determinada",
  "game.LedSprite.changeBrightnessBy|param|value": "el valor para alterar el brillo",
  "game.LedSprite.changeDirectionBy": "Altera la ``dirección`` utilizando el ángulo para girar a la derecha",
  "game.LedSprite.changeDirectionBy|param|angle": "A hacer",
  "game.LedSprite.changeXBy": "Altera la posición de ``x`` por la cantidad determinada",
  "game.LedSprite.changeXBy|param|x": "A hacer",
  "game.LedSprite.changeYBy": "Altera la posición de ``y`` por la cantidad determinada",
  "game.LedSprite.changeYBy|param|y": "A hacer",
  "game.LedSprite.change|param|property": "el nombre de la propiedad a ser alterada",
  "game.LedSprite.change|param|value": "cantidad de la alteración, por ejemplo: 1",
  "game.LedSprite.delete": "Excluye el sprite de la engine de juego. El sprite no aparecerá más en el display ni interactuará con otros sprites.",
  "game.LedSprite.direction": "Informa la direción actual de un sprite",
  "game.LedSprite.get": "Obtiene una propriedad del sprite",
  "game.LedSprite.get|param|property": "el nombre de la propiedad a ser alterada",
  "game.LedSprite.goTo": "Ir para esta posición en el display",
  "game.LedSprite.goTo|param|x": "A hacer",
  "game.LedSprite.goTo|param|y": "A hacer",
  "game.LedSprite.ifOnEdgeBounce": "Si estuviese tocando el borde del palco y girado en dirección a ella, entonces girar para el otro lado.",
  "game.LedSprite.isTouching": "Retorna verdadero si el sprite estuviese en la misma posición del sprite especificado",
  "game.LedSprite.isTouchingEdge": "Retorna verdadero si el sprite estuviese tocando un borde",
  "game.LedSprite.isTouching|param|other": "A hacer",
  "game.LedSprite.move": "Mueve el sprite un número indicado de LEDs utilizando la direción actual",
  "game.LedSprite.move|param|leds": "número de leds a mover, por ejemplo: 1, -1",
  "game.LedSprite.off": "Apaga el sprite (encendido como estándar)",
  "game.LedSprite.on": "Enciende el sprite (encendido como estándar )",
  "game.LedSprite.set": "Define una propiedad del sprite",
  "game.LedSprite.setBlink": "Define el intervalo de duración del parpadeo en milisegundos.",
  "game.LedSprite.setBlink|param|ms": "A hacer",
  "game.LedSprite.setBrightness": "Define el ``brillo`` de un sprite",
  "game.LedSprite.setBrightness|param|brightness": "el brillo de 0 (apagado) a 255 (encendido), por ejemplo: 255.",
  "game.LedSprite.setDirection": "Define la dirección del sprite actual, arredondado para el múltiplo de 45 más próximo",
  "game.LedSprite.setDirection|param|degrees": "A hacer",
  "game.LedSprite.setX": "Define la posição ``x`` de un sprite",
  "game.LedSprite.setX|param|x": "A hacer",
  "game.LedSprite.setY": "Define la posición ``y`` de un sprite",
  "game.LedSprite.setY|param|y": "A hacer",
  "game.LedSprite.set|param|property": "el nombre de la propiedad a ser alterada",
  "game.LedSprite.turn": "Gira el sprite",
  "game.LedSprite.turnLeft": "Gira para la izquierda (sentido antihorario)",
  "game.LedSprite.turnLeft|param|degrees": "A hacer",
  "game.LedSprite.turnRight": "Gira para la derecha (sentido horario)",
  "game.LedSprite.turnRight|param|degrees": "A hacer",
  "game.LedSprite.turn|param|degrees": "ángulo en grados a girar, por ejemplo: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "izquierda o derecha",
  "game.LedSprite.x": "Informa la posición ``x`` de un sprite en el display de LEDs",
  "game.LedSprite.y": "Informa la posición ``y`` de un sprite en el display de LEDs",
  "game.addLife": "Añade puntos de vida a la vida actual",
  "game.addLife|param|lives": "A hacer",
  "game.addScore": "Añade puntos a la puntuación actual y exhibe una animación",
  "game.addScore|param|points": "cantidad de puntos a añadir, por ejemplo: 1",
  "game.createSprite": "Crea un nuevo sprite de LEDs apuntando para la derecha.",
  "game.createSprite|param|x": "coordenada horizontal del sprite, por ejemplo: 2",
  "game.createSprite|param|y": "coordenada vertical del sprite, por ejemplo: 2",
  "game.currentTime": "Obtiene el tiempo restante (desde el `inicio del conteo`) o el tiempo actual (desde que el dispositivo inició el `iniciar cronómetro`) en milisegundos.",
  "game.gameOver": "Exhibe una animación de fin de juego y la puntuación.",
  "game.invalidSprite": "Obtiene un sprite inválido; utilizado para inicializar variables locales.",
  "game.isGameOver": "Indica si el juego está exhibiendo la secuencia de fin de juego.",
  "game.isPaused": "Indica si la renderización del juego está pausada para permitir otras animaciones",
  "game.isRunning": "Obtiene un valor indicativo de que el juego todavía está siendo ejecutado. Retorna `falso` si fin de juego.",
  "game.level": "Obtiene el nivel actual",
  "game.levelUp": "Sube el nivel y exhibe un mensaje.",
  "game.life": "Obtiene el número de vidas actual",
  "game.pause": "Pausa el motor de renderización del juego para permitir otras animaciones",
  "game.removeLife": "Remueve vida(s)",
  "game.removeLife|param|life": "A hacer",
  "game.resume": "Hace continuar el motor de renderización del juego",
  "game.score": "Obtiene la puntuación actual",
  "game.setLife": "Define la cantidad de vidas",
  "game.setLife|param|value": "A hacer",
  "game.setScore": "Define el valor de la puntuación actual",
  "game.setScore|param|value": "nuevo valor de puntuación.",
  "game.showScore": "Exhibe el placar en el display.",
  "game.startCountdown": "Exhibe una animación, después inicia un temporizador de cuenta regresiva del juego, que causa el Fin de Juego al llegar a 0",
  "game.startCountdown|param|ms": "duración de la cuenta regresiva en milisegundos, por ejemplo: 10000",
  "game.startStopwatch": "Inicia el cronómetro. `current time` informará el tiempo transcurrido.",
  "images": "Creación, manipulación y exhibición de las imágenes LED.",
  "images.createBigImage": "Crea una imagen con 2 cuadros.",
  "images.createImage": "Crea una imagen que se ajusta al display de LEDs.",
  "input": "Eventos y datos de sensores",
  "input.acceleration": "Obtiene el valor de aceleración en miligravedades (cuando la placa está en la posición horizontal con el display para arriba, x=0, y=0 y z=-1024)",
  "input.acceleration|param|dimension": "A hacer",
  "input.buttonIsPressed": "Obtiene el estado del botón (presionado o no) para ``A`` y ``B``.",
  "input.buttonIsPressed|param|button": "el botón a consultar, por ejemplo: Button.A",
  "input.calibrate": "Obsoleto, use input.calibrateCompass en ese lugar.",
  "input.calibrateCompass": "Obsoleto, la calibración de la brújula es automática.",
  "input.compassHeading": "Obtiene la orientación actual en grados.",
  "input.lightLevel": "Lee el nivel de luz aplicado al display de LEDs en un intervalo de ``0`` (oscuro) a ``255`` (claro).",
  "input.magneticForce": "Obtiene el valor de la fuerza magnética en ``micro-Teslas`` (``µT``). Esta función no tiene asistencia en el simulador.",
  "input.magneticForce|param|dimension": "A hacer",
  "input.onButtonPressed": "Contiene el código que será ejecutado siempre que un botão (A, B o A + B) sea presionado y liberado nuevamente.",
  "input.onButtonPressed|param|body": "código a ser ejecutado cuando el evento fuese activado",
  "input.onButtonPressed|param|button": "el botón que precisa ser presionado",
  "input.onGesture": "Contiene el código que será ejecutado siempre que un gesto sea detectado (como agitar la micro:bit).",
  "input.onGesture|param|body": "código a ser ejecutado cuando el evento de gesto sea activado",
  "input.onGesture|param|gesture": "el tipo de gesto a monitorear, por ejemplo: Gesture.Shake",
  "input.onLogoDown": "Contiene el código que será ejecutado siempre que el logo esté para abajo y la placa esté en la vertical.",
  "input.onLogoDown|param|body": "A hacer",
  "input.onLogoUp": "Contiene el código que será ejecutado siempre que el logo esté para arriba y la placa esté en la vertical.",
  "input.onLogoUp|param|body": "A hacer",
  "input.onPinPressed": "Contiene el código que será ejecutado siempre que una puerta sea tocada y liberada nuevamente (mientras la puerta GND también esté siendo tocada).",
  "input.onPinPressed|param|body": "el código que será ejecutado cuando la puerta sea presionada",
  "input.onPinPressed|param|name": "la puerta que precisa ser presionada. por ejemplo: TouchPin.P0",
  "input.onPinReleased": "Contiene el código que será ejecutado cuando la puerta sea liberada.",
  "input.onPinReleased|param|body": "el código que será ejecutado cuando la puerta sea liberada",
  "input.onPinReleased|param|name": "la puerta que precisa ser liberada, por ejemplo: TouchPin.P0",
  "input.onScreenDown": "Contiene el código que será ejecutado siempre que el display esté para abajo.",
  "input.onScreenDown|param|body": "A hacer",
  "input.onScreenUp": "Contiene el código que será ejecutado siempre que el display esté para arriba.",
  "input.onScreenUp|param|body": "A hacer",
  "input.onShake": "Contiene el código que será ejecutado siempre que se agite el dispositivo.",
  "input.onShake|param|body": "A hacer",
  "input.pinIsPressed": "Obtiene el estado de la puerta (presionada o no). Requiere que el tierra (GND) sea tocado para cerrar el circuito.",
  "input.pinIsPressed|param|name": "puerta utilizada para detectar el toque, por ejemplo: TouchPin.P0",
  "input.rotation": "Inclinación o giro del dispositivo, a lo largo del ``eje-x`` o del ``eje-y``, en grados.",
  "input.rotation|param|kind": "A hacer",
  "input.runningTime": "Obtiene el número de milisegundos transcurridos desde que fue encendido.",
  "input.runningTimeMicros": "Obtiene el número de microsegundos transcurridos desde que fue encendido.",
  "input.setAccelerometerRange": "Define el límite de muestreo del acelerómetro, en gravedades.",
  "input.setAccelerometerRange|param|range": "un valor describe la fuerza máxima de la aceleración medida",
  "input.temperature": "Obtiene la temperatura en grados Celsius (°C).",
  "led": "Control del display de LEDs.",
  "led.brightness": "Obtiene el brillo del display de 0 (apagado) a 255 (brillo total).",
  "led.displayMode": "Obtiene el modo actual del display",
  "led.enable": "Enciende o apaga el display",
  "led.fadeIn": "Aumenta el brillo del display.",
  "led.fadeIn|param|ms": "A hacer",
  "led.fadeOut": "Reduce el brillo del display.",
  "led.fadeOut|param|ms": "A hacer",
  "led.plot": "Enciende un LED específico, utilizando las coordenadas x e y (x es horizontal, y es vertical). (0,0) es arriba, a la izquierda.",
  "led.plotAll": "Enciende todos los LEDs",
  "led.plotBarGraph": "Muestra un gráfico de barras vertical con base en los valores `de` y `hasta`. Si `hasta` fuese 0, el gráfico se ajustará automáticamente.",
  "led.plotBarGraph|param|high": "valor máximo. Si fuese 0, el valor máximo será ajustado automáticamente, por ejemplo: 0",
  "led.plotBarGraph|param|value": "valor a indicar en el gráfico",
  "led.plotBrightness": "Enciende un LED específico, con un brillo específico, en las coordenadas x e y (x es horizontal, y es vertical). (0,0) es arriba, a la izquierda.",
  "led.plotBrightness|param|brightness": "el brillo varía de 0 (apagado) a 255 (claro), por ejemplo: 255",
  "led.plotBrightness|param|x": "la coordenada horizontal del LED comenzando en 0",
  "led.plotBrightness|param|y": "la coordenada vertical del LED comenzando en 0",
  "led.plot|param|x": "la coordenada horizontal del LED comenzando en 0",
  "led.plot|param|y": "la coordenada vertical del LED comenzando en 0",
  "led.point": "Obtiene el estado encendido\/apagado de un LED específico, utilizando coordenadas x, y. (0,0) es arriba, a la izquierda.",
  "led.point|param|x": "A hacer",
  "led.point|param|y": "A hacer",
  "led.screenshot": "Realiza una captura del display de LEDs y retorna una imagen.",
  "led.setBrightness": "Define el brillo del display de 0 (apagado) hasta 255 (brillo total).",
  "led.setBrightness|param|value": "el valor del brillo, por ejemplo: 255, 127, 0",
  "led.setDisplayMode": "Define el modo de exhibición entre negro y blanco y tonos de gris para la renderización de LEDs.",
  "led.setDisplayMode|param|mode": "modo o modo de exhibición de funcionamiento del display",
  "led.stopAnimation": "Cancela la animación actual y limpia otras animaciones pendientes.",
  "led.toggle": "Alterna un píxel específico",
  "led.toggleAll": "Invierte el display de LEDs actual",
  "led.toggle|param|x": "A hacer",
  "led.toggle|param|y": "A hacer",
  "led.unplot": "Apaga un LED específico, utilizando las coordenadas x e y (x es horizontal, y es vertical). (0,0) es arriba, a la izquierda.",
  "led.unplot|param|x": "A hacer",
  "led.unplot|param|y": "A hacer",
  "music": "Generación de tonos musicales.",
  "music.beat": "Retorna la duración de un beat en milisegundos",
  "music.beginMelody": "Comienza a tocar una melodía. Las notas se expresan como una string de caracteres en el formato: NOTE[octava][:duración]",
  "music.beginMelody|param|melodyArray": "el array de la melodía a sonar, por ejemplo: ['g5:1']",
  "music.beginMelody|param|options": "opciones de melodía, una vez\/repetición, en primer plano\/segundo plano",
  "music.builtInMelody": "Obtiene el array de melodía de una melodía preintegrada.", 
  "music.changeTempoBy": "Altera el tiempo por la cantidad especificada (bpm)",
  "music.changeTempoBy|param|bpm": "La alteración en golpes por minuto para el tiempo, por ejemplo: 20",
  "music.noteFrequency": "Obtiene la frecuencia de una nota.",
  "music.noteFrequency|param|name": "el nombre de la nota, por ejemplo: Note.C",
  "music.onEvent": "Contiene el código que será ejecutado en varios eventos de melodía",
  "music.playTone": "Reproduce un tono por la puerta ``P0`` con determinada duración.",
  "music.playTone|param|frequency": "ajuste del tono a reproducir en Hertz (Hz)",
  "music.playTone|param|ms": "duración del tono en milisegundos (ms)",
  "music.rest": "Silencio (no reproduce nada) en la puerta ``P0`` por un tiempo especificado.",
  "music.rest|param|ms": "duración del silencio en milisegundos (ms)",
  "music.ringTone": "Reproduce un tono por la puerta ``P0``.",
  "music.ringTone|param|frequency": "ajuste del tono a reproducir en Hertz (Hz)",
  "music.setPlayTone": "Define una función personalizada playTone para reproducir melodías",
  "music.setTempo": "Define el tiempo para el valor especificado",
  "music.setTempo|param|bpm": "El nuevo tiempo en golpes por minuto, por ejemplo: 120",
  "music.tempo": "Retorna el tiempo en golpes por minuto. Tiempo es la velocidad (bpm = golpes por minuto) en que las notas son tocadas. Cuanto mayor es el valor del tiempo, más rápido tocarán las notas.",
  "parseInt": "Convierte una string en un número entero.",
  "pins": "Controla, en las Puertas, las corrientes para señales analógico\/digital, servos, i2c, ...",
  "pins.analogPitch": "Emite una señal de modulación por ancho de pulso (en inglés Pulse-width modulation - PWM) por la puerta actual de ajuste. Utiliza la función `analog set pitch pin` (defina P como puerta de ajuste analógico) para definir la puerta de ajuste.",
  "pins.analogPitch|param|frequency": "frecuencia a modular en Hz.",
  "pins.analogPitch|param|ms": "duración del ajuste en milisegundos.",
  "pins.analogReadPin": "Lee el valor del conector como analógico, o sea, como un valor comprendido entre 0 y 1023.",
  "pins.analogReadPin|param|name": "la puerta en la que se realizará la escritura, por ejemplo: AnalogPin.P0",
  "pins.analogSetPeriod": "Configura la modulación por ancho de pulso (PWM) de la salida analógica para un determinado valor en **microsegundos** o `1\/1000` milisegundos. Si esta puerta no hubiese sido configurada como salida analógica (utilizando `escriba en modo analógico en la puerta`), la operación no tendrá efecto.",
  "pins.analogSetPeriod|param|micros": "período en microsegundos. p.ej.: 20000",
  "pins.analogSetPeriod|param|name": "la puerta analógica para definir el período, por ejemplo: AnalogPin.P0",
  "pins.analogSetPitchPin": "Define qué puerta usar cuando se utiliza `ajuste analógico` o música.",
  "pins.analogSetPitchPin|param|name": "puerta de donde se modula el ajuste",
  "pins.analogWritePin": "Define el valor del conector como analógico, o sea, como un valor comprendido entre 0 y 1023.",
  "pins.analogWritePin|param|name": "nombre de la puerta en la que se realizará la escritura, por ejemplo: AnalogPin.P0",
  "pins.analogWritePin|param|value": "valor a escribir en la puerta, entre ``0`` y ``1023``. p.ej.: 1023, 0",
  "pins.createBuffer": "Crea una nueva área de memoria temporaria inicializada con zeros.",
  "pins.createBuffer|param|size": "número de bytes del área de memoria temporaria",
  "pins.digitalReadPin": "Lee de la puerta el conector especificado como 0 o 1",
  "pins.digitalReadPin|param|name": "puerta de lectura, por ejemplo: DigitalPin.P0",
  "pins.digitalWritePin": "Define un valor de puerta o conector como 0 o 1.",
  "pins.digitalWritePin|param|name": "puerta en que se hará la escritura, por ejemplo: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valor a definir en la puerta, 1 por ejemplo, 0",
  "pins.i2cReadBuffer": "Lee `size` bytes de un `address` I2C de 7 bits.",
  "pins.i2cReadNumber": "Lee un número de dirección I2C de 7 bits.",
  "pins.i2cWriteBuffer": "Escribe bytes en una dirección I2C de 7 bits.",
  "pins.i2cWriteNumber": "Escribe un número en una dirección I2C de 7 bits.",
  "pins.map": "Convierte un número de un intervalo para otro. O sea, el valor (que está en el primer intervalo – límite inferior hasta limite superior) es convertido para el segundo intervalo, respetando los nuevos límites.",
  "pins.map|param|fromHigh": "el límite superior del intervalo actual del valor, por ejemplo: 1023",
  "pins.map|param|fromLow": "el límite inferior del intervalo actual del valor",
  "pins.map|param|toHigh": "el límite superior del intervalo deseado del valor, por ejemplo: 4",
  "pins.map|param|toLow": "el límite inferior del intervalo deseado del valor",
  "pins.map|param|value": "valor a convertir en los intervalos",
  "pins.onPulsed": "Configura esta puerta como de entrada digital y genera eventos cuyo registro de tiempo informa la duración en que la puerta estuvo o ``alta`` o ``baja``.",
  "pins.onPulsed|param|name": "puerta digital a registrar, por ejemplo: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "el valor del cambio de estado, por ejemplo: PulseValue.High",
  "pins.pulseDuration": "Obtiene la duración del último cambio de estado, en microsegundos. Esta función debe ser llamada de dentro de un manipulador ``cuando la puerta P esté en estado ...``.",
  "pins.pulseIn": "Retorna la duración del cambio de estado em microsegundos",
  "pins.pulseIn|param|name": "la puerta que mide el cambio de estado, por ejemplo: DigitalPin.P0",
  "pins.pulseIn|param|value": "el valor del estado, por ejemplo: PulseValue.High",
  "pins.servoSetPulse": "Configura esta puerta de entrada\/salida como una salida analógica\/pwm, configura el período para 20 ms y define el ancho del cambio de estado, con base en el valor que es dado, en **microsegundos** o `1\/1000` milisegundos.",
  "pins.servoSetPulse|param|micros": "duración del cambio de estado en microsegundos, por ejemplo: 1500",
  "pins.servoSetPulse|param|name": "nombre de la puerta",
  "pins.servoWritePin": "Escribe un valor en el servo, controlando el eje de acuerdo. En un servo estándar, eso configurará el ángulo del eje (en grados), moviendo el eje para aquella orientación. En un servo de rotación continua, eso configurará la velocidad del servo (con ``0`` siendo velocidad total en una dirección, ``180`` velocidad total en la otra dirección y un valor próximo a ``90`` representando sin movimiento).",
  "pins.servoWritePin|param|name": "la puerta en la que se realizará la escritura, por ejemplo: AnalogPin.P0",
  "pins.servoWritePin|param|value": "ángulo o velocidad de rotación, por ejemplo: 180,90,0",
  "pins.setEvents": "Configura los eventos emitidos por esa puerta. Es posible registrarse para recibir eventos utilizando ``control.onEvent()`` (cuando ocurra el evento).",
  "pins.setEvents|param|name": "puerta para definir el modo de evento activado, por ejemplo: DigitalPin.P0",
  "pins.setEvents|param|type": "el tipo de eventos para que esta puerta emita, por ejemplo: PinEventType.Edge",
  "pins.setPull": "Configura la referencia de esta puerta.",
  "pins.setPull|param|name": "puerta en la que se definirá el modo de referencia, por ejemplo: DigitalPin.P0",
  "pins.setPull|param|pull": "una de las configuraciones de referencia Mbed, por ejemplo: PinPullMode.PullUp",
  "pins.sizeOf": "Obtiene el tamaño en bytes del formato numérico especificado.",
  "pins.spiFormat": "Define los bits y el modo SPI",
  "pins.spiFormat|param|bits": "el número de bits, por ejemplo: 8",
  "pins.spiFormat|param|mode": "el modo, por ejemplo: 3",
  "pins.spiFrequency": "Define la frecuencia del SPI",
  "pins.spiFrequency|param|frequency": "la frecuencia del reloj, por ejemplo: 1000000",
  "pins.spiPins": "Define las puertas MOSI, MISO, SCK utilizadas por la instancia del SPI",
  "pins.spiWrite": "Escribe en el SPI esclavo y retorna la respuesta",
  "pins.spiWrite|param|value": "Datos a ser enviados para el SPI esclavo",
  "serial": "Lectura y grabación de datos sobre una conexión serial.",
  "serial.delimiters": "Devuelve la string delimitadora correspondiente",
  "serial.onDataReceived": "Registra el evento que será accionado cuando uno de los delimitadores sea encontrado.",
  "serial.onDataReceived|param|delimiters": "los caracteres a ser correspondidos con los caracteres recibidos.",
  "serial.readBuffer": "Lee múltiples caracteres del área de memoria temporaria de recepción. Aguarda hasta que haya caracteres suficientes.",
  "serial.readBuffer|param|length": "tamaño estándar del área de memoria temporaria, por ejemplo: 64",
  "serial.readLine": "Lee una línea de texto de la puerta serial.",
  "serial.readString": "Lee los datos recibidos y guardados en el área de memoria temporaria, como una string",
  "serial.readUntil": "Lee una línea de texto de la puerta serial y retorna el área de memoria temporaria cuando el delimitador es encontrado.",
  "serial.readUntil|param|delimiter": "delimitador de texto que separa cada bloque de texto",
  "serial.redirect": "Define la entrada y salida serial para utilizar puertas en lugar de conexión USB.",
  "serial.redirectToUSB": "Direcciona la entrada y salida serial para utilizar la conexión USB.",
  "serial.redirect|param|rate": "la nueva tasa de transmisión. p.ej.: 115200",
  "serial.redirect|param|rx": "la nueva puerta de recepción, por ejemplo: SerialPin.P1",
  "serial.redirect|param|tx": "las nuevas puertas de transmisión, por ejemplo: SerialPin.P0",
  "serial.writeBuffer": "Envía un área de memoria temporaria a través de la conexión serial",
  "serial.writeLine": "Escribe una línea de texto en la puerta serial",
  "serial.writeNumber": "Escribe un valor numérico en la puerta serial",
  "serial.writeNumbers": "Escribe un array de valores numéricos como CSV en la puerta serial",
  "serial.writeString": "Escribe una string a través de la conexión Serial.",
  "serial.writeValue": "Escribe un par ``nombre: valor`` como una línea en la puerta serial.",
  "serial.writeValue|param|name": "nombre del flujo de valores, por ejemplo: x",
  "serial.writeValue|param|value": "escribir"
}
