{
  "Array": "Adicionar, remover e substituir itens nas listas.\n\nAdicionar, remover e substituir itens nas listas.",
  "Array.filter": "Retornar os elementos de um array que satisfazem à condição especificada em uma função de retorno.",
  "Array.filter|param|callbackfn": "Uma função que aceita até dois argumentos. O método de filtragem chama a função de retorno uma vez para cada elemento do array.",
  "Array.get": "Obter o valor de um índice específico.",
  "Array.get|param|index": "a posição inicial na lista do item, eg: 0",
  "Array.indexOf": "Retornar o índice da primeira ocorrência de um valor em um array.",
  "Array.indexOf|param|fromIndex": "O índice do array no qual iniciar a pesquisa. Se não for passado um valor, a pesquisa começa no índice 0.",
  "Array.indexOf|param|item": "O valor para localizar no array.",
  "Array.insertAt": "Inserir o valor em um índice específico, aumentando o comprimento do array em 1.",
  "Array.insertAt|param|index": "a posição inicial na lista para inserir o valor, eg: 0",
  "Array.insertAt|param|value": "para inserir, eg: 0",
  "Array.length": "Obtém ou define o comprimento do array. Este número é maior que o maior elemento definido em um array.",
  "Array.map": "Chamar uma função de retorno definida para cada elemento do array, e retorna um array contendo os resultados.",
  "Array.map|param|callbackfn": "Uma função que aceita até dois argumentos. O método de mapeamento chama a função de retorno uma vez para cada elemento do array.",
  "Array.pop": "Remover o último elemento de um array e o retorna.",
  "Array.push": "Acrescentar novos elementos a um array.",
  "Array.push|param|item": "acrescentar ao array.",
  "Array.reduce": "Chamar a função de retorno especificada para todos os elementos de um array. O valor retornado da função de retorno é o resultado acumulado, e é usado como um argumento na próxima vez que a função de retorno for chamada.",
  "Array.reduce|param|callbackfn": "Uma função que aceita até três argumentos. O método de redução chama a função de retorno uma vez para cada elemento do array.",
  "Array.reduce|param|initialValue": "Valor inicial para começar a acumulação. A primeira chamada da função de retorno fornece este valor como um argumento ao invés de um valor de um array.",
  "Array.removeAt": "Remover o elemento em um determinado índice.",
  "Array.removeAt|param|index": "a posição inicial da lista em que o valor será removido, eg: 0",
  "Array.removeElement": "Remover a primeira ocorrência de um objeto. Retorna verdadeiro caso seja removido.",
  "Array.reverse": "Inverter os elementos em um array. O primeiro elemento do array torna-se o último, e o último elemento torna-se o primeiro.",
  "Array.set": "Inserir um valor em um índice específico.",
  "Array.set|param|index": "a posição inicial na lista para inserir o valor, eg: 0",
  "Array.shift": "Remover o primeiro elemento de um array e o retorna. Este método muda o comprimento do array.",
  "Array.slice": "Retornar uma parte de um array.",
  "Array.slice|param|end": "O final de uma parte especificada do array. eg: 0",
  "Array.slice|param|start": "O início de uma parte especificada do array. eg: 0",
  "Array.sort": "Ordenar os elementos do array e retorna o array. A ordenação não é necessariamente estável.",
  "Array.splice": "Remover elementos de um array.",
  "Array.splice|param|deleteCount": "A quantidade de elementos para remover. eg: 0",
  "Array.splice|param|start": "A posição inicial de um array da qual começar a remover elementos. eg: 0",
  "Array.unshift": "Adicionar um elemento ao início de um array e retornar o novo comprimento do array.",
  "Array.unshift|param|value": "inserir ao início do array.",
  "Math": "Mais operações complexas com números.",
  "Math.abs": "Retorna o valor absoluto de um número (o valor independente do número ser positivo ou negativo)\nPor exemplo, o valor absoluto de -5 igual ao valor absoluto de 5.",
  "Math.abs|param|x": "Uma expressão numérica para a qual o valor absoluto é necessário.",
  "Math.max": "Retorna a maior entre duas expressões numéricas fornecidas.",
  "Math.min": "Retorna a menor entre duas expressões numéricas fornecidas.",
  "Math.pow": "Retornar o valor de uma base elevada a uma determinada potência.",
  "Math.pow|param|x": "O valor base da expressão.",
  "Math.pow|param|y": "O valor do expoente da expressão.",
  "Math.random": "Retornar um valor aleatório entre 0 e `limit`.",
  "Math.randomBoolean": "Gera aleatoriamente um valor `true` ou `false`, assim como jogar uma moeda.",
  "Math.random|param|limit": "o limite superior do número gerado, eg: 4.",
  "Math.sign": "Retorna o sinal de x, indicando se x é positivo, negativo ou zero.",
  "Math.sign|param|x": "A expressão numérica para testar",
  "Math.sqrt": "Retorna a raiz quadrada de um número.",
  "Math.sqrt|param|x": "Uma expressão numérica.",
  "String": "Combinar, dividir e pesquisar strings.\n\nCombinar, dividir e pesquisar strings.",
  "String.charAt": "Retornar o caractere de um determinado índice.",
  "String.charAt|param|index": "A posição inicial de um caractere desejado, eg: 0",
  "String.charCodeAt": "Retornar o valor Unicode do caractere em uma determinada posição.",
  "String.charCodeAt|param|index": "O índice inicial do caractere desejado. Se não houver nenhum caractere no índice especificado, retorna-se NaN.",
  "String.compare": "Verificar como a ordem dos caracteres em duas strings é diferente (em código ASCII).",
  "String.compare|param|that": "String a ser comparada com a string especificada",
  "String.concat": "Retorna uma string que contém a concatenação de duas ou mais strings.",
  "String.concat|param|other": "A string que será adicionada ao final da outra string, eg: \"me adicione!\"",
  "String.fromCharCode": "Criar uma string a partir de um código ASCII fornecido.",
  "String.isEmpty": "Retorna um valor indicando se a string está vazia",
  "String.length": "Retornar o comprimento de uma string objeto.",
  "String.substr": "Retornar uma substring da string atual.",
  "String.substr|param|length": "número de caracteres para extrair, eg: 3",
  "String.substr|param|start": "primeiro índice do caractere; pode ser negativo caso a contagem parta do fim, eg: 0",
  "basic": "Fornece acesso às funcionalidades básicas da micro:bit.",
  "basic.clearScreen": "Desligar todos os LEDs",
  "basic.forever": "Repete o código para sempre em segundo plano. Em cada iteração, permite a execução de outros códigos.",
  "basic.pause": "Pausar pelo tempo especificado em milissegundos",
  "basic.pause|param|ms": "por quanto tempo pausar, eg: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Desenha uma imagem na tela de LEDs.",
  "basic.plotLeds|param|leds": "padrão dos LEDs para ligar/desligar",
  "basic.showAnimation": "Mostra uma sequência de imagens na tela de LEDs como uma anumimação.",
  "basic.showAnimation|param|interval": "tempo em milissegundos entre cada redesenho",
  "basic.showAnimation|param|leds": "padrão de LEDs para ligar/desligar",
  "basic.showArrow": "Mostra uma seta na tela",
  "basic.showArrow|param|direction": "a direção da seta",
  "basic.showArrow|param|interval": "o tempo (milissegundos) para mostrar o ícone. O padrão é de 600.",
  "basic.showIcon": "Desenha o ícone selecionado na tela",
  "basic.showIcon|param|icon": "o id predefinido do ícone",
  "basic.showIcon|param|interval": "o tempo (milissegundos) para mostrar o ícone. O padrão é de 600.",
  "basic.showLeds": "Desenha uma imagem na tela de LEDs.",
  "basic.showLeds|param|interval": "tempo em milissegundos para pausar após desenhar",
  "basic.showLeds|param|leds": "o padrão de LEDs para ligar/desligar",
  "basic.showNumber": "Fazer com que um número percorra a tela. Se o número couber na tela (i.e. um único dígito), não percorrer.",
  "basic.showNumber|param|interval": "velocidade para percorrer a tela; eg: 150, 100, 200, -100",
  "basic.showString": "Mostrar texto no display, um caractere por vez. Se a string couber na tela (i.e. uma única letra), não percorrer.",
  "basic.showString|param|interval": "o quão rápido trocar caracteres; eg: 150, 100, 200, -100",
  "basic.showString|param|text": "o texto para percorrer a tela, eg: \"Olá!\"",
  "control": "Tempo de execução e utilidades do evento.",
  "control.assert": "Se a condição for falsa, mostrar mensagem no console serial, e interromper com o código 098.",
  "control.deviceName": "Obtém um nome adequado para o dispositivo, derivado do seu número serial",
  "control.deviceSerialNumber": "Encontrar um número serial único e consistente deste dispositivo a partir de dados internos.",
  "control.eventSourceId": "Retorna uma constante com o valor do tempo de execução em C++",
  "control.eventTimestamp": "Obtém o horário do último evento executado no ônibus",
  "control.eventValue": "Obtém o valor do último evento executado no ônibus",
  "control.eventValueId": "Retorna uma constante com o valor do tempo de execução em C++",
  "control.inBackground": "Planeja um código que é executado em segundo plano.",
  "control.onEvent": "Ativa um evento no evento do ônibus.",
  "control.panic": "Mostra o erro de código especificado e interrompe o programa.",
  "control.raiseEvent": "Ativa um evento no evento do ônibus.",
  "control.raiseEvent|param|mode": "definição opcional de como o evento deve ser processado após sua construção(o padrão é CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID da MicroBit que gerou o evento e.g. MICROBIT_ID_BUTTON_A.",
  "control.raiseEvent|param|value": " Parte específica do código indicando a causa do evento.",
  "control.reset": "Reinicia a BBC micro:bit.",
  "control.runtimeWarning": "Mostra um aviso no simulador.",
  "control.waitMicros": "Bloqueia o filamento atual para o número dado de microssegundos",
  "control.waitMicros|param|micros": "número de microssegundos para esperar. eg: 4",
  "game": "Um jogo de um único LED",
  "game.addLife": "Adiciona pontos à pontuação de vida atual",
  "game.addLife|param|lives": "A FAZER",
  "game.addScore": "Adiciona pontos à pontuação atual e mostra uma animação",
  "game.addScore|param|points": "quantidade de pontos para mudar, eg: 1",
  "game.createSprite": "Cria uma nova unidade de LED apontando para a direita.",
  "game.createSprite|param|x": "coordenada horizontal, eg: 2",
  "game.createSprite|param|y": "coordenada vertical, eg: 2",
  "game.currentTime": "Obtém o tempo remanescente (desde a contagem do início) ou tempo atual (desde que o dispositivo foi iniciado) em milissegundos.",
  "game.gameOver": "Mostra uma animação de jogo encerrado e a pontuação.",
  "game.invalidSprite": "Obtém uma unidade inválida; usado para inicializações locais.",
  "game.isGameOver": "Indica se o jogo mostrará a sequencia de jogo encerrado.",
  "game.isPaused": "Indica se a renderização do jogo está pausada para permitir outras animações",
  "game.isRunning": "Obtém um valor indicando se o jogo ainda está em execução. Retorna `false` se o jogo tiver encerrado.",
  "game.level": "Obtém o nível atual",
  "game.levelUp": "Incrementa o nível e mostra uma mensagem.",
  "game.life": "Obtém a pontuação de vida atual",
  "game.pause": "Pausa o mecanismo de renderização do jogo para permitir outras animações",
  "game.removeLife": "Remove um pouco da pontuação de vida",
  "game.removeLife|param|life": "A FAZER",
  "game.resume": "Retoma o mecanismo de renderização do jogo",
  "game.score": "Obtém a pontuação atual",
  "game.setLife": "Define a pontuação de vida atual",
  "game.setLife|param|value": "A FAZER",
  "game.setScore": "Define a pontuação atual",
  "game.setScore|param|value": "nova pontuação.",
  "game.showScore": "Mostra a pontuação na tela.",
  "game.startCountdown": "Mostra uma animação e inicia um cronômetro com contagem regressiva do jogo, que encerra o jogo quando atinge 0",
  "game.startCountdown|param|ms": "duração da contagem regressiva em milissegundos, eg: 10000",
  "game.startStopwatch": "Inicia um cronômetro. `current time` retornará o tempo decorrido.",
  "game.LedSprite.delete": "Exclui a figura do jogo. A figura não irá mais aparecer na tela, ou interagir com outras figuras.",
  "game.LedSprite.move": "Move um certo numero de LEDS na direção atual",
  "game.LedSprite.turn": "Gira a figura",
  "game.LedSprite.change": "Muda uma propriedade da figura",
  "game.LedSprite.set": "Configura uma propriedade da figura",
  "game.LedSprite.isTouching": "Reporta VERDADEIRO se a figura tem a mesma posição da figura especificada",
  "game.LedSprite.isTouchingEdge": "Reporta VERDADEIRO se a figura está encostando na borda",
  "game.LedSprite.ifOnEdgeBounce": "Se estiver encostando na borda e apontando para borda, vira para outro lado",
  "images": "Criação, manipulação e apresentação de imagens de LED.",
  "images.createBigImage": "Cria uma imagem com 2 moldes.",
  "images.createImage": "Cria uma imagem que se encaixe na tela de LEDs.",
  "Image.showImage": "Mostra um frame da imagem com deslocamento``x offset``.",
  "Image.scrollImage": "rola imagem .",
  "images.arrowImage": "mostra imagem de flecha",
  "images.iconImage": "mostra imagem de icone",
  "input": "Eventos e dados de sensores",
  "input.acceleration": "Obter o valor da aceleração em mili-gravitações (quando a placa está numa superfície plana com a tela para cima, x=0, y=0 e z=-1024)",
  "input.acceleration|param|dimension": "A FAZER",
  "input.buttonIsPressed": "Obter o estado do botão (pressionado ou não) para ``A`` e ``B``.",
  "input.buttonIsPressed|param|button": "O botão de análise, eg: Button.A",
  "input.calibrate": "Obsoleto, usar input.calibrateCompass.",
  "input.calibrateCompass": "Obsoleto, calibração da bússola é automática.",
  "input.compassHeading": "Obter a orientação atual da bússola em graus.",
  "input.lightLevel": "Lê o nível de luminosidade aplicado na tela de LEDs em um intervalo de ``0`` (escuro) para ``255`` (claro).",
  "input.magneticForce": "Obter o valor da força magnética em ``micro-Teslas`` (``µT``). O simulador não suporta esta função.",
  "input.magneticForce|param|dimension": "A FAZER",
  "input.onButtonPressed|param|body": "code to run when event is raised",
  "input.onButtonPressed": "Fazer algo quando um botão (A, B ou ambos A+B) é pressionado e liberado novamente.",
  "input.onButtonPressed|param|button": "o botão que deve ser pressionado",
  "input.onGesture": "Fazer algo quando um gesto é realizado (como agitar a micro:bit).",
  "input.onGesture|param|body": "código para ser executado quando um gesto é ativado",
  "input.onGesture|param|gesture": "o tipo de gesto para rastrear, eg: Gesture.Shake",
  "input.onLogoDown": "Anexa uma parte de código para executar quando o logo está para baixo e a placa na vertical.",
  "input.onLogoDown|param|body": "A FAZER",
  "input.onLogoUp": "Anexa uma parte de código para executar quando o logo está para cima e a placa na vertical.",
  "input.onLogoUp|param|body": "A FAZER",
  "input.onPinPressed": "Fazer algo quando um pino é tocado e soldo novamente (enquanto o pino GND for tocado também).",
  "input.onPinPressed|param|body": "o código para ser executado quando o pino é pressionado",
  "input.onPinPressed|param|name": "o pino que deve ser pressionado, eg: TouchPin.P0",
  "input.onPinReleased": "Fazer algo quando um pino é liberado.",
  "input.onPinReleased|param|body": "o código para executar quando o pino é liberado",
  "input.onPinReleased|param|name": "o pino que deve ser liberado, eg: TouchPin.P0",
  "input.onScreenDown": "Anexa uma parte de código para executar quando a tela está para baixo.",
  "input.onScreenDown|param|body": "A FAZER",
  "input.onScreenUp": "Anexa uma parte de código para executar quando a tela está para cima.",
  "input.onScreenUp|param|body": "A FAZER",
  "input.onShake": "Anexa uma parte de código para executar quando o dispositivo é agitado.",
  "input.onShake|param|body": "A FAZER",
  "input.pinIsPressed": "Obter o estado do pino (pressionado ou não). Exige que o GND esteja pressionado para fechar o circuito.",
  "input.pinIsPressed|param|name": "pino usado para detectar o toque, eg: TouchPin.P0",
  "input.rotation": "O alcance do dispositivo, rotação pelo eixo ``x-axis`` ou ``y-axis``, em graus.",
  "input.rotation|param|kind": "A FAZER",
  "input.runningTime": "Obtém o número em milissegundos decorridos desde que foi ligado à alimentação.",
  "input.setAccelerometerRange": "Define o intervalo da amostra do acelerômetro em gravidades.",
  "input.setAccelerometerRange|param|range": "um valor que descreve a máxima aceleração medida",
  "input.temperature": "Obtém a temperatura em graus Celsius (°C).",
  "input.runningTime": "Retorna o numero de milisegundos desde que a placa foi ligada",
  "led": "Controle da tela de LEDs.",
  "led.brightness": "Obter o brilho da tela de 0 (desligado) até 255 (brilho máximo).",
  "led.displayMode": "Obtém o modo atual do display",
  "led.enable": "Liga ou desliga o display",
  "led.fadeIn": "Mostra gradualmente a tela.",
  "led.fadeIn|param|ms": "A FAZER",
  "led.fadeOut": "Diminui gradualmente o brilho da tela.",
  "led.fadeOut|param|ms": "A FAZER",
  "led.plot": "Liga o LED especificado usando coordenadas x, y (x é horizontal, y é vertical). (0,0) é o canto superior esquerdo.",
  "led.plotAll": "Liga todos os LEDs",
  "led.plotBarGraph": "Mostra uma barra gráfica vertical baseada no `value` e `high` valor.\nSe `high` é 0, o gráfico é ajustado automaticamente.",
  "led.plotBarGraph|param|high": "valor máximo. Se 0, valor máximo ajustado automaticamente, eg: 0",
  "led.plotBarGraph|param|value": "valor atual para plotar",
  "led.plotBrightness": "Ligar o LED especificado com o brilho especificado usando coordenadas x, y (x é horizontal, y é vertical). (0,0) é o canto superior esquerdo.",
  "led.plotBrightness|param|brightness": "o brilho de 0 (desligado) até 255 (ligado), eg:255",
  "led.plotBrightness|param|x": "a coordenada horizontal do LED começando em 0",
  "led.plotBrightness|param|y": "a coordenada vertical do LED começando em 0",
  "led.plot|param|x": "a coordenada horizontal do LED começando em 0",
  "led.plot|param|y": "a coordenada vertical do LED começando em 0",
  "led.point": "Obter o estado (ligado/desligado) do LED especificado usando coordenadas x, y. (0,0) é o canto superior esquerdo.",
  "led.point|param|x": "A FAZER",
  "led.point|param|y": "A FAZER",
  "led.screenshot": "Tira uma foto da tela de LEDs e retorna uma imagem.",
  "led.setBrightness": "Define o brilho da tela de 0 (desligado) até 255 (brilho máximo).",
  "led.setBrightness|param|value": "o brilho da tela, eg:255, 127, 0",
  "led.setDisplayMode": "Define o modo do display entre preto, branco e escala de cinza para renderização dos LEDs.",
  "led.setDisplayMode|param|mode": "modo do display em que a tela opera",
  "led.stopAnimation": "Cancela a animação atual e apaga outras animações pendentes.",
  "led.toggle": "Alterna um pixel em particular",
  "led.toggleAll": "Inverte o display de LEDs atual",
  "led.toggle|param|x": "A FAZER",
  "led.toggle|param|y": "A FAZER",
  "led.unplot": "Desliga o LED especificado usando coordenadas x, y (x é horizontal, y é vertical). (0,0) é o canto superior esquerdo.",
  "led.unplot|param|x": "TODO",
  "led.unplot|param|y": "TODO",
  "music": "Geração de música.",
  "music.beat": "Retorna a duração de uma batida em milissegundos",
  "music.beginMelody": "Começa a tocar uma melodia.\nNotas são expressas como uma strinf de caracteres no seguinte formato: NOTE[octave][:duration]",
  "music.beginMelody|param|melodyArray": "o array da melodia para tocar, eg: ['g5:1']",
  "music.beginMelody|param|options": "opções de melodia, uma vez / para sempre, no plano principal / em segundo plano",
  "music.builtInMelody": "Obtém o array da melodia a partir de uma melodia interna.",
  "music.changeTempoBy": "Muda o tempo por uma quantia especificada",
  "music.changeTempoBy|param|bpm": "A mudança em batidas por minuto do tempo, eg: 20",
  "music.noteFrequency": "Obtém a frequência de uma nota.",
  "music.noteFrequency|param|name": "o nome da nota, eg: Note.C",
  "music.onEvent": "Registra o código para executar em várias melodias",
  "music.playTone": "Toca um som pelo pino ``P0`` pela duração especificada.",
  "music.playTone|param|frequency": "frequência do som para tocar em Hertz (Hz)",
  "music.playTone|param|ms": "duração do som em milissegundos (ms)",
  "music.rest": "Descansa (não toca nada) por um tempo especificado por meio do pino ``P0``.",
  "music.rest|param|ms": "duração do descanso em milissegundos (ms)",
  "music.ringTone": "Toca um som pelo pino ``P0``.",
  "music.ringTone|param|frequency": "frequência do som para tocar em Hertz (Hz)",
  "music.setPlayTone": "Define uma função personalizável para tocar melodias",
  "music.setTempo": "Define o tempo para a quantia especificada",
  "music.setTempo|param|bpm": "O novo tempo em batidas por minuto, eg: 120",
  "music.tempo": "Retorna o tempo em batidas por minuto. Tempo é a velocidade (bpm = batidas por minuto) em que as notas tocam. Quanto maior o valor do tempo, mais rápido as notas serão tocadas.",
  "pins": "Controla as correntes nos pinos para sinais analógicos/digitais, servos, i2c, ...",
  "pins.analogPitch": "Emite um sinal PWM (Pulse-width modulation) para o pino atual. Usar `analog set pitch pin` para definir a frequência do pino.",
  "pins.analogPitch|param|frequency": "frequência para modulação em Hz.",
  "pins.analogPitch|param|ms": "duração da frequência em milissegundos.",
  "pins.analogReadPin": "Ler o valor do conector como analógico, ou seja, como um valor entre 0 e 1023.",
  "pins.analogReadPin|param|name": "pino para registrar, eg: AnalogPin.P0",
  "pins.analogSetPeriod": "Configura o PWM (Pulse-width modulation) da saída analógica para o valor especificado em **microssegundos** ou `1/1000` milissegundos.\nSe este pino não está configurado como uma saída analógica (usando `analog write pin`), a operação não tem efeito.",
  "pins.analogSetPeriod|param|micros": "período em microssegundos. eg:20000",
  "pins.analogSetPeriod|param|name": "pino analógico para definir o período, eg: AnalogPin.P0",
  "pins.analogSetPitchPin": "Define o pino quando se usa `analog pitch` ou música.",
  "pins.analogSetPitchPin|param|name": "pino para o qual modular a frequência",
  "pins.analogWritePin": "Definir o valor do conector como analógico. O valor deve estar entre 0 e 1023.",
  "pins.analogWritePin|param|name": "nome do pino para registrar, eg: AnalogPin.P0",
  "pins.analogWritePin|param|value": "valor do pino entre ``0`` e ``1023``. eg:1023,0",
  "pins.createBuffer": "Cria um novo buffer não inicializado.",
  "pins.createBuffer|param|size": "número de bytes no buffer",
  "pins.digitalReadPin": "Lê o pino ou conector especificado como 0 ou 1",
  "pins.digitalReadPin|param|name": "pino para ser lido, eg: DigitalPin.P0",
  "pins.digitalWritePin": "Definir o valor do pino ou conector como 0 ou 1.",
  "pins.digitalWritePin|param|name": "pino para registrar, eg: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valor a ser definido para o pino, 1 eg,0",
  "pins.i2cReadBuffer": "Lê `size` bytes no 7-bit I2C `address`.",
  "pins.i2cReadNumber": "Lê um número do endereço do 7-bit I2C.",
  "pins.i2cWriteBuffer": "Registra bytes no 7-bit I2C `address`.",
  "pins.i2cWriteNumber": "Registra um número no endereço do 7-bit I2C.",
  "pins.map": "Remapeia um número de um intervalo para outro. Isto é, um valor ``from low`` seria mapeado para ``to low``, um valor ``from high`` para ``to high``, valores no meio para valores no meio, etc.",
  "pins.map|param|fromHigh": "o limite máximo do intervalo atual do valor, eg: 1023",
  "pins.map|param|fromLow": "o limite mínimo do intervalo atual do valor",
  "pins.map|param|toHigh": "o limite máximo do intervalo alvo do valor, eg: 4",
  "pins.map|param|toLow": "o limite mínimo do intervalo alvo do valor",
  "pins.map|param|value": "valor para mapear em intervalos",
  "pins.onPulsed": "Configura este pino para uma entrada digital, e gera eventos em que o horário é a duração em que este pino estava ``high`` ou ``low``.",
  "pins.onPulsed|param|name": "pino digital para registrar, eg: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "o valor do pulso, eg: PulseValue.High",
  "pins.pulseDuration": "Obtém a duração do último pulso em microssegundos. Esta função deve ser chamada por um ``onPulsed`` ativador.",
  "pins.pulseIn": "Retorna a duração de um pulso em microssegundos",
  "pins.pulseIn|param|name": "o pino que mede o pulso, eg: DigitalPin.P0",
  "pins.pulseIn|param|value": "o valor do pulso, eg: PulseValue.High",
  "pins.servoSetPulse": "Configura o pino de entrada/saída como uma saída analógica/pwm, configura o período para ser 20 ms, e define a largura do pulso, baseado no valor que é especificado **microssegundos** ou `1/1000` millissegundos.",
  "pins.servoSetPulse|param|micros": "duração do pulso em microssegundos, eg:1500",
  "pins.servoSetPulse|param|name": "nome do pino",
  "pins.servoWritePin": "Registrra um valor para o servo, controlando o eixo adequadamente. Em um servo padrão, isto irá definir o ângulo do eixo (em graus), movendo o eixo para esta orientação. Em um servo de rotação contínua, isto irá definir a velocidade do servo (em que ``0`` é a velocidade máxima em uma direção, ``180`` é a velocidade máxima na outra direção, e um valor próximo de ``90`` significa sem movimentação).",
  "pins.servoWritePin|param|name": "pino para registrar, eg: AnalogPin.P0",
  "pins.servoWritePin|param|value": "ângulo ou velocidade de rotação, eg:180,90,0",
  "pins.setEvents": "Configura os eventos emitidos por este pino. Eventos podem ser inscritos para \nusando ``control.onEvent()``.",
  "pins.setEvents|param|name": "pino para definir o início do evento, eg: DigitalPin.P0",
  "pins.setEvents|param|type": "tipo de eventos para este pino emitir, eg: PinEventType.Edge",
  "pins.setPull": "Configura o momento de puxar deste pino.",
  "pins.setPull|param|name": "pino para definir o modo de puxar ativado, eg: DigitalPin.P0",
  "pins.setPull|param|pull": "uma das configurações para puxar o pino, eg: PinPullMode.PullUp",
  "pins.sizeOf": "Obter o tamanho em bytes de um formato especificado de número.",
  "pins.spiFormat": "Define os bits SPI e o modo",
  "pins.spiFormat|param|bits": "o número de bits, eg: 8",
  "pins.spiFormat|param|mode": "o modo, eg: 3",
  "pins.spiFrequency": "Define a frequência SPI",
  "pins.spiFrequency|param|frequency": "a frequência de clock, eg: 1000000",
  "pins.spiWrite": "Write to the SPI slave and return the response",
  "pins.spiPins": "Define os pinos MOSI, MISO, SCK usados pela instância SPI",
  "pins.spiWrite|param|value": "Dado a ser enviado para o SPI escravo",
  "serial": "Leitura e registro de dados por uma conexão serial.",
  "serial.delimiters": "Retorna a delimitação da string correspondente",
  "serial.onDataReceived": "Registra um evento para ser encerrado quando um fator delimitante é correspondido.",
  "serial.onDataReceived|param|delimiters": "os caracteres que devem corresponder aos caracteres recebidos.",
  "serial.readBuffer": "Lê múltiplos caracteres do buffer de recebimento e preenche um buffer de usuário.",
  "serial.readBuffer|param|length": "comprimento padrão do buffer, eg: 64",
  "serial.readLine": "Lê uma linha de texto da porta serial.",
  "serial.readString": "Lê um dado recebido armazenado como uma string",
  "serial.readUntil": "Lê uma linha de texto da porta serial e retorna o buffer quando o fator delimitante é correspondido.",
  "serial.readUntil|param|delimiter": "texto delimitante que separa cada pedaço de texto",
  "serial.redirect": "Configurar dinamicamente a instância serial para usar outros pinos, que não USBTX e USBRX.",
  "serial.redirect|param|rate": "a nova taxa de transmissão. eg: 115200",
  "serial.redirect|param|rx": "o novo pino receptor, eg: SerialPin.P1",
  "serial.redirect|param|tx": "o novo pino transmissor, eg: SerialPin.P0",
  "serial.writeBuffer": "Envia um buffer por uma conexão serial",
  "serial.writeLine": "Imprime uma linha de texto na serial",
  "serial.writeNumber": "Imprime um valor numérico na serial",
  "serial.writeString": "Envia um pedaço de texto por uma conexão serial.",
  "serial.writeValue": "Registra um ``name: value`` par na serial.",
  "serial.writeValue|param|name": "nome do valor de transmissão, eg: x",
  "serial.writeValue|param|value": "registrar"
}