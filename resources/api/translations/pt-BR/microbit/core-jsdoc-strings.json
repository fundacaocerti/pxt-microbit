{
  "AcceleratorRange.EightG": "O acelerômetro mede forças de até 8 g de gravidade.",
  "AcceleratorRange.FourG": "O acelerômetro mede forças de até 4 g de gravidade.",
  "AcceleratorRange.OneG": "O acelerômetro mede forças de até 1 g de gravidade.",
  "AcceleratorRange.TwoG": "O acelerômetro mede forças de até 2 g de gravidade.",
  "Array": "Adiciona, remove e substitui itens da lista. Adiciona, remove e substitui itens da lista.",
  "Array.every": "Verifica se todos os elementos do array passam no teste implementado pela função fornecida.",
  "Array.every|param|callbackfn": "Uma função que aceita até dois argumentos. O método aplica a função callbackfn uma vez a cada elemento do array.",
  "Array.filter": "Retorna os elementos de um array que atendem à condição especificada em uma função de callback.",
  "Array.filter|param|callbackfn": "Uma função que aceita até dois argumentos. O método filter chama a função callbackfn uma vez para cada elemento do array.",
  "Array.forEach": "Chama determinada função de callback para cada elemento do array.",
  "Array.forEach|param|callbackfn": "Uma função que aceita até dois argumentos. O método forEach chama a função callbackfn uma vez para cada elemento do array.",
  "Array.get": "Obtém o valor que está no índice definido.",
  "Array.get|param|index": "a posição (começando por 0) na lista de itens, por exemplo: 0.",
  "Array.indexOf": "Retorna o índice da primeira ocorrência de um valor de um array.",
  "Array.indexOf|param|fromIndex": "O índice do array em que a busca deve começar. Se o segundo argumento não for informado, a busca começará no índice 0.",
  "Array.indexOf|param|item": "O valor a localizar no array.",
  "Array.insertAt": "Insere o valor em um índice específico e acresce 1 ao comprimento do array.",
  "Array.insertAt|param|index": "a posição (começando em 0) onde inserir o valor, por exemplo: 0",
  "Array.insertAt|param|value": "a inserir, por exemplo: 0",
  "Array.join": "reúne todos os elementos de um array em uma string e retorna esta string.",
  "Array.join|param|sep": "o separador a ser usado na string",
  "Array.length": "Obtém ou define o comprimento do array. Este número é uma unidade maior que a posição do último elemento definido no array.",
  "Array.map": "Aplica a função de callback para cada elemento do array e retorna um array com os resultados.",
  "Array.map|param|callbackfn": "Uma função que aceita até dois argumentos. O método map chama a função callbackfn uma vez para cada elemento do array.",
  "Array.pop": "Remove o último elemento de um array e o retorna.",
  "Array.push": "Anexa, ao final, um novo elemento a um array.",
  "Array.push|param|item": "a anexar ao array.",
  "Array.reduce": "Aplica a função de callback definida a todos os elementos de um array. O valor devolvido pela função de callback é o resultado acumulado, que é fornecido como argumento na chamada seguinte desta função.",
  "Array.reduce|param|callbackfn": "Uma função que aceita até três argumentos. O método reduce aplica a função callbackfn uma vez a cada elemento do array.",
  "Array.reduce|param|initialValue": "Valor inicial para começar a acumulação. A primeira chamada à função callbackfn fornece este valor como argumento, em vez de um valor do array.",
  "Array.removeAt": "Remove o elemento de uma posição determinada.",
  "Array.removeAt|param|index": "a posição (começando em 0) na lista, de onde se retira o valor, por exemplo: 0",
  "Array.removeElement": "Remove a primeira ocorrência de um objeto. Retornará verdadeiro se for removido.",
  "Array.reverse": "Inverte os elementos de um array. O primeiro elemento do array torna-se o último e o último torna-se o primeiro.",
  "Array.set": "Armazena um valor em um índice específico.",
  "Array.set|param|index": "a posição (começando em 0) na lista onde armazenar o valor, por exemplo: 0",
  "Array.shift": "Remove o primeiro elemento de um array e o retorna. Este método altera o comprimento do array.",
  "Array.slice": "Retorna uma parte de um array.",
  "Array.slice|param|end": "O final da parte especificada do array. por exemplo: 0",
  "Array.slice|param|start": "O início da parte especificada do array. por exemplo: 0",
  "Array.some": "Verifica se pelo menos um elemento do array passa no teste implementado pela função fornecida.",
  "Array.some|param|callbackfn": "Uma função que aceita até dois argumentos. O método aplica a função callbackfn uma vez a cada elemento do array.",
  "Array.sort": "Ordena os elementos de um array e retorna o array. A ordenação não é necessariamente estável.",
  "Array.splice": "Remove elementos de um array.",
  "Array.splice|param|deleteCount": "O número de elementos a remover. por exemplo: 0",
  "Array.splice|param|start": "A posição (começando em 0) no array, a partir de onde se inicia a remoção de elementos. por exemplo: 0",
  "Array.unshift": "Adiciona um elemento ao início de um array e retorna o novo comprimento do array.",
  "Array.unshift|param|value": "a inserir no início do array.",
  "Boolean.toString": "Retorna a representação de um objeto em formato de string.",
  "Buffer.fill": "Preenche (um trecho) do buffer com um dado valor.",
  "Buffer.getNumber": "Lê, do buffer, um número com formato específico.",
  "Buffer.length": "Retorna o comprimento de um objeto Buffer.",
  "Buffer.rotate": "Gira o conteúdo do buffer para a esquerda.",
  "Buffer.rotate|param|length": "número de elementos no buffer. Caso seja negativo, o comprimento será definido como o comprimento do buffer menos o início. por exemplo: -1.",
  "Buffer.rotate|param|offset": "número de bytes a deslocar; use um valor negativo para deslocar para a direita",
  "Buffer.rotate|param|start": "posição de início, no buffer. O padrão é 0.",
  "Buffer.setNumber": "Escreve um número no formato especificado no buffer.",
  "Buffer.shift": "Desloca o conteúdo do buffer para a esquerda, completando com zeros.",
  "Buffer.shift|param|length": "número de elementos no buffer. Caso seja negativo, o comprimento será definido como o comprimento do buffer menos o início. por exemplo: -1.",
  "Buffer.shift|param|offset": "número de bytes a deslocar; use um valor negativo para deslocar para a direita",
  "Buffer.shift|param|start": "posição de início, no buffer. O padrão é 0.",
  "Buffer.slice": "Retorna a cópia de um trecho de buffer.",
  "Buffer.write": "Escreve o conteúdo de `src` a partir de `dstOffset` no buffer atual.",
  "EventCreationMode": "Como criar o evento.",
  "EventCreationMode.CreateAndFire": "O MicroBitEvent é iniciado e seus manipuladores de eventos são disparados imediatamente (não adequado para uso em interrupções!).",
  "EventCreationMode.CreateOnly": "O MicroBitEvent é iniciado e não ocorre mais nenhum processamento adicional.",
  "Gesture.EightG": "Ativado quando detecta um choque de 8 g.",
  "Gesture.FreeFall": "Ativado quando a placa está caindo!",
  "Gesture.LogoDown": "Ativado quando o logotipo está virado para baixo e o display está na vertical.",
  "Gesture.LogoUp": "Ativado quando o logotipo está virado para cima e o display está na vertical.",
  "Gesture.ScreenDown": "Ativado quando o display está apontando para cima e a placa está na horizontal.",
  "Gesture.ScreenUp": "Ativado quando o display está apontando para baixo e a placa está na horizontal.",
  "Gesture.Shake": "Ativado quando agitado.",
  "Gesture.SixG": "Ativado quando detecta um choque de 6 g.",
  "Gesture.ThreeG": "Ativado quando detecta um choque de 3 g.",
  "Gesture.TiltLeft": "Ativado quando o display está apontado para a esquerda.",
  "Gesture.TiltRight": "Ativado quando o display está apontado para a direita.",
  "Image.clear": "Apaga todos os pixels.",
  "Image.height": "Obtém a altura das linhas (sempre 5).",
  "Image.pixel": "Obtém o estado do pixel da posição ``(x,y)``",
  "Image.pixelBrightness": "Obtém a intensidade do brilho do pixel ([0..255]) de uma determinada posição",
  "Image.pixel|param|x": "A fazer",
  "Image.pixel|param|y": "A fazer",
  "Image.plotFrame": "Desenha, no display, o n-ésimo quadro da imagem.",
  "Image.plotFrame|param|xOffset": "índice da coluna em que se deve iniciar a exibição da imagem",
  "Image.plotImage": "Desenha a imagem em uma determinada coluna no display",
  "Image.scrollImage": "Move uma imagem.",
  "Image.scrollImage|param|frameOffset": "deslocamento no eixo X em cada etapa da animação, por exemplo: 1, 2, 5 ",
  "Image.scrollImage|param|interval": "tempo entre cada etapa da animação em milissegundos, por exemplo: 200",
  "Image.setPixel": "Define o estado do pixel na posição ``(x,y)``",
  "Image.setPixelBrightness": "Define um brilho de pixel específico em uma dada posição",
  "Image.setPixel|param|value": "A fazer",
  "Image.setPixel|param|x": "A fazer",
  "Image.setPixel|param|y": "A fazer",
  "Image.showFrame": "Exibe um quadro em particular de uma imagem grande.",
  "Image.showFrame|param|frame": "A fazer",
  "Image.showImage": "Exibe um quadro da imagem com deslocamento indicado.",
  "Image.showImage|param|xOffset": "índice da coluna em que se deve iniciar a exibição da imagem",
  "Image.width": "Obtém a largura em colunas",
  "Math": "Operações mais complexas com números.",
  "Math.abs": "Retorna o valor absoluto de um número (desconsidera se ele é positivo ou negativo). Por exemplo, o valor absoluto de -5 é o mesmo que o valor absoluto de 5.",
  "Math.abs|param|x": "Uma expressão numérica em que o valor absoluto seja necessário.",
  "Math.ceil": "Retorna o menor número que seja maior que, ou igual a, o seu argumento numérico.",
  "Math.ceil|param|x": "Uma expressão numérica.",
  "Math.floor": "Retorna o maior número que seja menor que, ou igual a, o seu argumento numérico.",
  "Math.floor|param|x": "Uma expressão numérica.",
  "Math.idiv": "Retorna o valor inteiro de 32 bits com sinal resultante da divisão de dois números.",
  "Math.idiv|param|x": "O primeiro número",
  "Math.idiv|param|y": "O segundo número",
  "Math.imul": "Retorna o valor inteiro de 32 bits com sinal resultante da multiplicação de dois números.",
  "Math.imul|param|x": "O primeiro número",
  "Math.imul|param|y": "O segundo número",
  "Math.max": "O resultado é o maior resultado dentre duas expressões numéricas.",
  "Math.min": "O resultado é o menor resultado dentre duas expressões numéricas.",
  "Math.pow": "O resultado é o valor da expressão base elevada à potência especificada.",
  "Math.pow|param|x": "O valor base da expressão.",
  "Math.pow|param|y": "O expoente da expressão.",
  "Math.random": "O resultado é um número aleatório entre 0 e `limite`.",
  "Math.randomBoolean": "Gera um valor `verdadeiro` ou `falso` aleatoriamente, como jogar uma moeda.",
  "Math.random|param|limit": "o limite superior do número gerado, por exemplo: 4",
  "Math.round": "Retorna o resultado da expressão numérica fornecida, arredondada para o número mais próximo.",
  "Math.round|param|x": "O valor a ser arredondado para o número mais próximo.",
  "Math.sign": "Returna o sinal de x, indicando se x é positivo, negativo ou zero.",
  "Math.sign|param|x": "A expressão numérica a ser testada",
  "Math.sqrt": "O resultado é a raiz quadrada de um número.",
  "Math.sqrt|param|x": "Uma expressão numérica.",
  "Math.trunc": "Retorna o número com a parte decimal truncada.",
  "Math.trunc|param|x": "Uma expressão numérica.",
  "Number.toString": "Retornar o número convertido em string.",
  "String": "Combinar, dividir e procurar strings. Combinar, dividir e procurar strings.",
  "String.charAt": "O resultado é o caractere que está na posição definida.",
  "String.charAt|param|index": "O índice (começando em 0) do caractere desejado, por exemplo: 0",
  "String.charCodeAt": "O resultado é o valor Unicode do caractere que está na posição definida.",
  "String.charCodeAt|param|index": "O índice (começando em 0) do caractere desejado Se não houver caractere na posição definida, retorna NaN (Not a Number).",
  "String.compare": "Compara os caracteres de duas strings (em codificação ASCII). Retorna -1 se a primeira é menor, 0 se são iguais, 1 se a primeira é a maior",
  "String.compare|param|that": "String a comparar com a string-alvo",
  "String.concat": "Retorna uma string que contém a concatenação de duas ou mais strings.",
  "String.concat|param|other": "A string a ser anexada ao fim da string, por exemplo: \"adicione-me!\"",
  "String.fromCharCode": "Cria uma string a partir do código de caracteres ASCII fornecido.",
  "String.isEmpty": "Returna um valor indicando se a string está vazia",
  "String.length": "Retorna o comprimento de um objeto String.",
  "String.substr": "Retorna uma substring da string atual, iniciando da posição indicada, com o tamanho dado.",
  "String.substr|param|length": "número de caracteres a extrair, por exemplo: 3",
  "String.substr|param|start": "índice do primeiro caractere; pode ser negativo com a contagem a partir do final, por exemplo: 0",
  "basic": "Dá acesso às funções básicas do micro:bit.",
  "basic.clearScreen": "Apaga todos os LEDs",
  "basic.forever": "Repete o código para sempre, em segundo plano. A cada interação, permite que outros códigos sejam executados.",
  "basic.pause": "Pausa por um período especificado em milissegundos",
  "basic.pause|param|ms": "a duração da pausa, por exemplo: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Mostra uma imagem no display de LEDs.",
  "basic.plotLeds|param|leds": "padrão de LEDs para acender/apagar",
  "basic.showAnimation": "Mostra uma sequência de telas de LED como uma animação.",
  "basic.showAnimation|param|interval": "tempo em milissegundos entre cada redesenho",
  "basic.showAnimation|param|leds": "padrão de LEDs para acender/apagar",
  "basic.showArrow": "Mostra uma seta na tela",
  "basic.showArrow|param|direction": "a direção da seta",
  "basic.showArrow|param|interval": "o tempo (em milissegundos) para mostrar o ícone. O padrão é 600.",
  "basic.showIcon": "Mostra o ícone selecionado no display de LEDs",
  "basic.showIcon|param|icon": "o id do ícone predefinido",
  "basic.showIcon|param|interval": "o tempo (em milissegundos) para mostrar o ícone. O padrão é 600.",
  "basic.showLeds": "Mostra uma imagem no display de LEDs.",
  "basic.showLeds|param|interval": "tempo de pausa em milissegundos depois de desenhar",
  "basic.showLeds|param|leds": "padrão de LEDs para acender/apagar",
  "basic.showNumber": "Rola um número pelo display. Se o número couber no display (ou seja, possuir só um dígito), será exibido estático.",
  "basic.showNumber|param|interval": "velocidade do movimento; por exemplo: 150, 100, 200, -100",
  "basic.showString": "Mostra texto no display, um caractere por vez. Se a string couber no display (ou seja, possuir só de uma letra), será exibida estática.",
  "basic.showString|param|interval": "velocidade de deslocamento de caracteres; por exemplo: 150, 100, 200, -100",
  "basic.showString|param|text": "o texto a mover no display, por exemplo: \"Oi!\"",
  "control": "Tempo de execução e Utilitário de eventos.",
  "control.assert": "Se a condição for falsa, mostrará msg no console da porta serial e gerará pânico com código 098.",
  "control.deviceName": "Obtém um nome amigável do dispositivo derivado do seu número de série",
  "control.deviceSerialNumber": "Deriva um número de série único e consistente deste dispositivo a partir de dados internos.",
  "control.eventSourceId": "Devolve o valor de uma constante de tempo de execução padrão C++",
  "control.eventTimestamp": "Obtém o carimbo de tempo do último evento executado no bus",
  "control.eventValue": "Obtém o valor do último evento executado no bus",
  "control.eventValueId": "Devolve o valor de uma constante de tempo de execução padrão C++",
  "control.inBackground": "Agenda o código que é executado em segundo plano.",
  "control.onEvent": "Registra um manipulador de eventos.",
  "control.panic": "Exibe o erro especificado e para o programa.",
  "control.raiseEvent": "Ativa um evento no barramento de eventos.",
  "control.raiseEvent|param|mode": "definição opcional de como o evendo deve ser processado após a construção (o padrão é CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID do Componente MicroBit que gerou o evento, ou seja: MICROBIT_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Código específico do componente indicando a causa do evento.",
  "control.reset": "Reinicia o BBC micro:bit.",
  "control.runtimeWarning": "Mostra aviso no simulador.",
  "control.waitMicros": "Bloqueia a fibra (thread) atual pelos microssegundos especificados",
  "control.waitMicros|param|micros": "número de microssegundos a esperar. p.ex.: 4",
  "game": "Uma engine de jogo com sprite de único LED",
  "game.LedSprite": "Um sprite de jogo renderizado como um único LED",
  "game.LedSprite.blink": "Informa a duração do ``piscar`` de um sprite",
  "game.LedSprite.brightness": "Informa o ``brilho`` de um sprite no display de LEDs",
  "game.LedSprite.change": "Altera uma propriedade do sprite",
  "game.LedSprite.changeBlinkBy": "Altera a duração do ``piscar`` pela quantidade determinada de milissegundos",
  "game.LedSprite.changeBlinkBy|param|ms": "A fazer",
  "game.LedSprite.changeBrightnessBy": "Altera a posição de ``y`` pela quantidade determinada",
  "game.LedSprite.changeBrightnessBy|param|value": "o valor para alterar o brilho",
  "game.LedSprite.changeDirectionBy": "Altera a ``direção`` usando o ângulo para girar à direita",
  "game.LedSprite.changeDirectionBy|param|angle": "A fazer",
  "game.LedSprite.changeXBy": "Altera a posição de ``x`` pela quantidade determinada",
  "game.LedSprite.changeXBy|param|x": "A fazer",
  "game.LedSprite.changeYBy": "Altera a posição de ``y`` pela quantidade determinada",
  "game.LedSprite.changeYBy|param|y": "A fazer",
  "game.LedSprite.change|param|property": "o nome da propriedade a ser alterada",
  "game.LedSprite.change|param|value": "quantidade da alteração, por exemplo: 1",
  "game.LedSprite.delete": "Exclui o sprite da engine de jogo. O sprite não aparecerá mais no display nem interagirá com outros sprites.",
  "game.LedSprite.direction": "Informa a direção atual de um sprite",
  "game.LedSprite.get": "Obtém uma propriedade do sprite",
  "game.LedSprite.get|param|property": "o nome da propriedade a ser alterada",
  "game.LedSprite.goTo": "Ir para esta posição no display",
  "game.LedSprite.goTo|param|x": "A fazer",
  "game.LedSprite.goTo|param|y": "A fazer",
  "game.LedSprite.ifOnEdgeBounce": "Se estiver tocando a borda do palco e virado em direção à ela, então virar para o outro lado.",
  "game.LedSprite.isTouching": "Retorna true se o sprite estiver na mesma posição do sprite especificado",
  "game.LedSprite.isTouchingEdge": "Retorna true se o sprite estiver tocando uma borda",
  "game.LedSprite.isTouching|param|other": "A fazer",
  "game.LedSprite.move": "Move o sprite um número indicado de LEDs usando a direção atual",
  "game.LedSprite.move|param|leds": "número de leds a mover, por exemplo: 1, -1",
  "game.LedSprite.off": "Apaga o sprite (aceso como padrão)",
  "game.LedSprite.on": "Acende o sprite (aceso como padrão)",
  "game.LedSprite.set": "Define uma propriedade do sprite",
  "game.LedSprite.setBlink": "Define o intervalo de duração da piscada em milissegundos.",
  "game.LedSprite.setBlink|param|ms": "A fazer",
  "game.LedSprite.setBrightness": "Define o ``brilho`` de um sprite",
  "game.LedSprite.setBrightness|param|brightness": "o brilho de 0 (apagado) a 255 (aceso), por exemplo: 255.",
  "game.LedSprite.setDirection": "Define a direção do sprite atual, arredondado para o múltiplo de 45 mais próximo",
  "game.LedSprite.setDirection|param|degrees": "A fazer",
  "game.LedSprite.setX": "Define a posição ``x`` de um sprite",
  "game.LedSprite.setX|param|x": "A fazer",
  "game.LedSprite.setY": "Define a posição ``y`` de um sprite",
  "game.LedSprite.setY|param|y": "A fazer",
  "game.LedSprite.set|param|property": "o nome da propriedade a ser alterada",
  "game.LedSprite.turn": "Acende o sprite",
  "game.LedSprite.turnLeft": "Vira para a esquerda (sentido anti-horário)",
  "game.LedSprite.turnLeft|param|degrees": "A fazer",
  "game.LedSprite.turnRight": "Vira para a direita (sentido horário)",
  "game.LedSprite.turnRight|param|degrees": "A fazer",
  "game.LedSprite.turn|param|degrees": "ângulo em graus a girar, por exemplo: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "esquerda ou direita",
  "game.LedSprite.x": "Informa a posição ``x`` de um sprite no display de LEDs",
  "game.LedSprite.y": "Informa a posição ``y`` de um sprite no display de LEDs",
  "game.addLife": "Adiciona pontos de vida à vida atual",
  "game.addLife|param|lives": "A fazer",
  "game.addScore": "Adiciona pontos à pontuação atual e exibe uma animação",
  "game.addScore|param|points": "quantidade de pontos a adicionar, por exemplo: 1",
  "game.createSprite": "Cria um novo sprite de LEDs apontando para a direita.",
  "game.createSprite|param|x": "coordenada horizontal do sprite, por exemplo: 2",
  "game.createSprite|param|y": "coordenada vertical do sprite, por exemplo: 2",
  "game.currentTime": "Obtém o tempo restante (desde o `início da contagem`) ou o tempo atual (desde que o dispositivo iniciou ou o `iniciar cronômetro`) em milissegundos.",
  "game.gameOver": "Exibe uma animação de fim de jogo e a pontuação.",
  "game.invalidSprite": "Obtém um sprite inválido; usado para inicializar variáveis locais.",
  "game.isGameOver": "Indica se o jogo está exibindo a sequência de fim de jogo.",
  "game.isPaused": "Indica se a renderização do jogo está pausada para permitir outras animações",
  "game.isRunning": "Obtém um valor indicativo de que o jogo ainda está sendo executado. Retorna `false` se fim de jogo.",
  "game.level": "Obtém o nível atual",
  "game.levelUp": "Sobe o nível e exibe uma mensagem.",
  "game.life": "Obtém o número de vidas atual",
  "game.pause": "Pausa o motor de renderização do jogo para permitir outras animações",
  "game.removeLife": "Remove vida(s)",
  "game.removeLife|param|life": "A fazer",
  "game.resume": "Faz continuar o motor de renderização do jogo",
  "game.score": "Obtém a pontuação atual",
  "game.setLife": "Define a quantidade de vidas",
  "game.setLife|param|value": "A fazer",
  "game.setScore": "Define o valor da pontuação atual",
  "game.setScore|param|value": "novo valor de pontuação.",
  "game.showScore": "Exibe o placar no display.",
  "game.startCountdown": "Exibe uma animação, depois inicia um temporizador de contagem regressiva de jogo, que causa o Fim de Jogo ao chegar em 0",
  "game.startCountdown|param|ms": "duração da contagem regressiva em milissegundos, por exemplo: 10000",
  "game.startStopwatch": "Inicia o cronômetro. `current time` informará o tempo decorrido.",
  "images": "Criação, manipulação e exibição das imagens LED.",
  "images.createBigImage": "Cria uma imagem com 2 quadros.",
  "images.createImage": "Cria uma imagem que se ajusta ao display de LEDs.",
  "input": "Eventos e dados de sensores",
  "input.acceleration": "Obtém o valor de aceleração em miligravidades (quando a placa está na posição horizontal com a tela para cima, x=0, y=0 e z=1024)",
  "input.acceleration|param|dimension": "A fazer",
  "input.buttonIsPressed": "Obtém o estado do botão (pressionado ou não) para ``A`` e ``B``.",
  "input.buttonIsPressed|param|button": "o botão a consultar, por exemplo: Button.A",
  "input.calibrate": "Obsoleto, use input.calibrateCompass no lugar.",
  "input.calibrateCompass": "Obsoleto, a calibração da bússola é automática.",
  "input.compassHeading": "Obtém a orientação atual em graus.",
  "input.lightLevel": "Lê o nível de luz aplicado ao display de LEDs em um intervalo de ``0`` (escuro) a ``255`` (claro).",
  "input.magneticForce": "Obtém o valor da força magnética em ``micro-Teslas`` (``µT``). Esta função não têm suporte no simulador.",
  "input.magneticForce|param|dimension": "A fazer",
  "input.onButtonPressed": "Executará código quando um botão (A, B ou A + B) for pressionado e liberado novamente.",
  "input.onButtonPressed|param|body": "código a ser executado quando o evento for ativado",
  "input.onButtonPressed|param|button": "o botão que precisa ser pressionado",
  "input.onGesture": "Executará código quando um gesto for detectado (como agitar o micro:bit).",
  "input.onGesture|param|body": "código a ser executado quando o evento de gesto for ativado",
  "input.onGesture|param|gesture": "o tipo de gesto a monitorar, por exemplo: Gesture.Shake",
  "input.onLogoDown": "O código a ser executado quando o logo estiver voltado para baixo e a placa estiver na vertical.",
  "input.onLogoDown|param|body": "A fazer",
  "input.onLogoUp": "O código a ser executado quando o logo estiver voltado para cima e a placa estiver na vertical.",
  "input.onLogoUp|param|body": "A fazer",
  "input.onPinPressed": "Executará código quando um pino for tocado e liberado novamente (enquanto o pino GND também estiver sendo tocado).",
  "input.onPinPressed|param|body": "o código a ser executado quando o pino é pressionado",
  "input.onPinPressed|param|name": "o pino que precisa ser pressionado. por exemplo: TouchPin.P0",
  "input.onPinReleased": "Executará código quando o pino for liberado.",
  "input.onPinReleased|param|body": "o código a ser executado quando o pino é liberado",
  "input.onPinReleased|param|name": "o pino que precisa ser liberado, por exemplo: TouchPin.P0",
  "input.onScreenDown": "O código a ser executado quando o display estiver voltado para baixo.",
  "input.onScreenDown|param|body": "A fazer",
  "input.onScreenUp": "O código a ser executado quando o display estiver voltado para cima.",
  "input.onScreenUp|param|body": "A fazer",
  "input.onShake": "O código a ser executado quando o dispositivo é agitado.",
  "input.onShake|param|body": "A fazer",
  "input.pinIsPressed": "Obtém o estado do pino (pressionado ou não). Requer que o terra (GND) seja tocado para fechar o circuito.",
  "input.pinIsPressed|param|name": "pino utilizado para detectar o toque, por exemplo: TouchPin.P0",
  "input.rotation": "Inclinação ou giro do dispositivo, ao longo do ``eixo-x`` ou ``eixo-y``, em graus.",
  "input.rotation|param|kind": "A fazer",
  "input.runningTime": "Obtém o número de milissegundos decorridos desde que foi ligado.",
  "input.runningTimeMicros": "Obtém o número de microssegundos decorridos desde que foi ligado.",
  "input.setAccelerometerRange": "Define o limite de amostragem do acelerômetro, em gravidades.",
  "input.setAccelerometerRange|param|range": "um valor descreve a força máxima da aceleração medida",
  "input.temperature": "Obtém a temperatura em graus Celsius (°C).",
  "led": "Controle do display de LEDs.",
  "led.brightness": "Obtém o brilho da tela de 0 (desligado) a 255 (brilho total).",
  "led.displayMode": "Obtém o modo atual do display",
  "led.enable": "Liga ou desliga o display",
  "led.fadeIn": "Aumenta o brilho do display.",
  "led.fadeIn|param|ms": "A fazer",
  "led.fadeOut": "Reduz o brilho do display.",
  "led.fadeOut|param|ms": "A fazer",
  "led.plot": "Acende um LED específico, usando as coordenadas x e y (x é horizontal, y é vertical). (0,0) é no alto, à esquerda.",
  "led.plotAll": "Acende todos os LEDs",
  "led.plotBarGraph": "Mostra um gráfico de barras vertical baseado nos valores `de` e `até`. Se `até` for 0, o gráfico se ajustará automaticamente.",
  "led.plotBarGraph|param|high": "valor máximo. Se for 0, o valor máximo será ajustado automaticamente, por exemplo: 0",
  "led.plotBarGraph|param|value": "valor a indicar no gráfico",
  "led.plotBrightness": "Acende um LED específico, com um brilho específico, nas coordenadas x e y (x é horizontal, y é vertical). (0,0) é no alto, à esquerda.",
  "led.plotBrightness|param|brightness": "o brilho varia de 0 (desligado) a 255 (claro), por exemplo: 255",
  "led.plotBrightness|param|x": "a coordenada horizontal do LED começando em 0",
  "led.plotBrightness|param|y": "a coordenada vertical do LED começando em 0",
  "led.plot|param|x": "a coordenada horizontal do LED começando em 0",
  "led.plot|param|y": "a coordenada vertical do LED começando em 0",
  "led.point": "Obtém o estado ligado/desligado de um LED específico, usando coordenadas x, y. (0,0) é no alto, à esquerda.",
  "led.point|param|x": "A fazer",
  "led.point|param|y": "A fazer",
  "led.screenshot": "Faz uma captura do display de LEDs e retorna uma imagem.",
  "led.setBrightness": "Define o brilho do display de 0 (desligado) até 255 (brilho total).",
  "led.setBrightness|param|value": "o valor do brilho, por exemplo: 255, 127, 0",
  "led.setDisplayMode": "Define o modo de exibição entre preto e branco e tons de cinza para a renderização de LEDs.",
  "led.setDisplayMode|param|mode": "modo o modo de exibição de funcionamento do display",
  "led.stopAnimation": "Cancela a animação atual e limpa outras animações pendentes.",
  "led.toggle": "Alterna um pixel específico",
  "led.toggleAll": "Inverte o display de LEDs atual",
  "led.toggle|param|x": "A fazer",
  "led.toggle|param|y": "A fazer",
  "led.unplot": "Apaga um LED específico, usando as coordenadas x e y (x é horizontal, y é vertical). (0,0) é no alto, à esquerda.",
  "led.unplot|param|x": "A fazer",
  "led.unplot|param|y": "A fazer",
  "music": "Geração de tons musicais.",
  "music.beat": "Retorna a duração de uma batida em milissegundos",
  "music.beginMelody": "Começa a tocar uma melodia. As notas são expressas como uma string de caracteres no formato: NOTE[oitava][:duração]",
  "music.beginMelody|param|melodyArray": "o array da melodia a tocar, por exemplo: ['g5:1']",
  "music.beginMelody|param|options": "opções de melodia, uma vez/repetição, em primeiro plano/segundo plano",
  "music.builtInMelody": "Obtém o array de melodia de um melodia pré-integrada.",
  "music.changeTempoBy": "Altera o tempo pela quantidade especificada",
  "music.changeTempoBy|param|bpm": "A alteração em batidas por minuto para o tempo, por exemplo: 20",
  "music.noteFrequency": "Obtém a frequência de uma nota.",
  "music.noteFrequency|param|name": "o nome da nota, por exemplo: Note.C",
  "music.onEvent": "Registra o código a ser executado em vários eventos de melodia",
  "music.playTone": "Reproduz um tom através do pino ``P0`` por uma determinada duração.",
  "music.playTone|param|frequency": "ajuste do tom a reproduzir em Hertz (Hz)",
  "music.playTone|param|ms": "duração do tom em milissegundos (ms)",
  "music.rest": "Silêncio (não reproduz nada) no pino ``P0`` por um tempo especificado.",
  "music.rest|param|ms": "duração do silêncio em milissegundos (ms)",
  "music.ringTone": "Reproduz um tom através do pino ``P0``.",
  "music.ringTone|param|frequency": "ajuste do tom a reproduzir em Hertz (Hz)",
  "music.setPlayTone": "Define uma função personalizada playTone para reproduzir melodias",
  "music.setTempo": "Define o tempo para o valor especificado",
  "music.setTempo|param|bpm": "O novo tempo em batidas por minuto, por exemplo: 120",
  "music.tempo": "Retorna o tempo em batidas por minuto. Tempo é a velocidade (bpm = batidas por minuto) em que as notas são tocadas. Quanto maior o valor do tempo, mais rápidas as notas tocarão.",
  "parseInt": "Converte uma string em um número inteiro.",
  "pins": "Controla, nos Pinos, as correntes para sinais analógico/digital, servos, i2c, ...",
  "pins.analogPitch": "Emite um sinal de modulação por largura de pulso (em inglês Pulse-width modulation - PWM) pelo pino atual de ajuste. Use a função `analog set pitch pin` (analógico defina o pino de ajuste) para definir qual é o pino de ajuste.",
  "pins.analogPitch|param|frequency": "frequência a modular em Hz.",
  "pins.analogPitch|param|ms": "duração do ajuste em milissegundos.",
  "pins.analogReadPin": "Lê o valor do conector como analógico, ou seja, como um valor compreendido entre 0 e 1023.",
  "pins.analogReadPin|param|name": "o pino no qual que será feita a escrita, por exemplo: AnalogPin.P0",
  "pins.analogSetPeriod": "Configura a modulação por largura de pulso (PWM) da saída analógica pra um dado valor em **microssegundos** ou `1/1000` milissegundos. Se este pino não tiver sido configurado como saída analógica (usando `analog write pin`), a operação não surtirá efeito.",
  "pins.analogSetPeriod|param|micros": "período em microssegundos. p.ex.: 20000",
  "pins.analogSetPeriod|param|name": "o pino analógico para definir o período, por exemplo: AnalogPin.P0",
  "pins.analogSetPitchPin": "Define qual pino usar quando utilizar `ajuste analógico` ou música.",
  "pins.analogSetPitchPin|param|name": "pino de onde se modula o ajuste",
  "pins.analogWritePin": "Define o valor do conector como analógico. O valor deve estar entre 0 e 1023.",
  "pins.analogWritePin|param|name": "nome do pino em que será feita a escrita, por exemplo: AnalogPin.P0",
  "pins.analogWritePin|param|value": "valor a escrever no pino, entre ``0`` e ``1023``. p.ex.: 1023, 0",
  "pins.createBuffer": "Cria um novo buffer inicializado com zeros.",
  "pins.createBuffer|param|size": "número de bytes do buffer",
  "pins.digitalReadPin": "Lê o pino ou conector especificado como 0 ou 1",
  "pins.digitalReadPin|param|name": "pino de leitura, por exemplo: DigitalPin.P0",
  "pins.digitalWritePin": "Define um valor de pino ou conector como 0 ou 1.",
  "pins.digitalWritePin|param|name": "pino em que será feita a escrita, por exemplo: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valor a definir no pino, 1 por exemplo, 0",
  "pins.i2cReadBuffer": "Lê `size` bytes de um `address` I2C de 7 bits.",
  "pins.i2cReadNumber": "Lê um número do endereço I2C de 7 bits.",
  "pins.i2cWriteBuffer": "Escreve bytes em um endereço I2C de 7 bits.",
  "pins.i2cWriteNumber": "Escreve um número em um endereço I2C de 7 bits.",
  "pins.map": "Re-mapeia um número de um intervalo para outro. Ou seja, o ``limite inferior`` original será mapeado para o equivalente definido no ``para limite inferior``, o ``limite superior`` original será mapeado para o ``limite superior`` equivalente, e os valores nos intervalos para valores nos intervalos respeitando os limites, etc.",
  "pins.map|param|fromHigh": "o limite superior do intervalo atual do valor, por exemplo: 1023",
  "pins.map|param|fromLow": "o limite inferior do intervalo atual do valor",
  "pins.map|param|toHigh": "o limite superior do intervalo alvo do valor, por exemplo: 4",
  "pins.map|param|toLow": "o limite inferior do intervalo alvo do valor",
  "pins.map|param|value": "valor a mapear em intervalos",
  "pins.onPulsed": "Configura este pino para uma entrada digital e gera eventos onde o carimbo de tempo é a duração em que este pino estava ou ``alto`` ou ``baixo``.",
  "pins.onPulsed|param|name": "pino digital a registrar, por exemplo: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "o valor do pulso, por exemplo: PulseValue.High",
  "pins.pulseDuration": "Obtém a duração do último pulso, em microssegundos. Esta função deve ser chamada de um manipulador ``onPulsed`` (quando o pino P pulsar...).",
  "pins.pulseIn": "Retorna a duração de um pulso em microssegundos",
  "pins.pulseIn|param|name": "o pino que mede o pulso, por exemplo: DigitalPin.P0",
  "pins.pulseIn|param|value": "o valor do pulso, por exemplo: PulseValue.High",
  "pins.servoSetPulse": "Configura este pino de IO como uma saída analógica/pwm, configura o período para 20 ms e define a largura do pulso, com base no valor que é dado, em **microssegundos** ou `1/1000` milissegundos.",
  "pins.servoSetPulse|param|micros": "duração do pulso em microssegundos, por exemplo: 1500",
  "pins.servoSetPulse|param|name": "nome do pino",
  "pins.servoWritePin": "Escreve um valor no servo, controlando o eixo de acordo. Em um servo padrão, isso configurará o ângulo do eixo (em graus), movendo o eixo para aquela orientação. Em um servo de rotação contínua, isso configurará a velocidade do servo (com ``0`` sendo velocidade total em uma direção, ``180`` velocidade total na outra direção e um valor próximo a ``90`` representando sem movimento).",
  "pins.servoWritePin|param|name": "o pino no qual que será feita a escrita, por exemplo: AnalogPin.P0",
  "pins.servoWritePin|param|value": "ângulo ou velocidade de rotação, por exemplo: 180,90,0",
  "pins.setEvents": "Configura os eventos emitidos por esse pino. É possível registrar-se para receber eventos usando ``control.onEvent()``.",
  "pins.setEvents|param|name": "pino para definir o modo de evento ativado, por exemplo: DigitalPin.P0",
  "pins.setEvents|param|type": "o tipo de eventos para este pino emitir, por exemplo: PinEventType.Edge",
  "pins.setPull": "Configura o pull deste pino.",
  "pins.setPull|param|name": "pino para definir o modo de pull ativado, por exemplo: DigitalPin.P0",
  "pins.setPull|param|pull": "uma das configurações pull mbed, por exemplo: PinPullMode.PullUp",
  "pins.sizeOf": "Obtém o tamanho em bytes do formato numérico especificado.",
  "pins.spiFormat": "Define os bits e o modo SPI",
  "pins.spiFormat|param|bits": "o número de bits, por exemplo: 8",
  "pins.spiFormat|param|mode": "o modo, por exemplo: 3",
  "pins.spiFrequency": "Define a frequência SPI",
  "pins.spiFrequency|param|frequency": "a frequência do relógio, por exemplo: 1000000",
  "pins.spiPins": "Define os pinos MOSI, MISO, SCK utilizados pela instância do SPI",
  "pins.spiWrite": "Escreve no SPI slave e retorna a resposta",
  "pins.spiWrite|param|value": "Dados a serem enviados para o SPI slave",
  "serial": "Leitura e gravação de dados sobre uma conexão serial.",
  "serial.delimiters": "Devolve a string delimitadora correspondente",
  "serial.onDataReceived": "Registra o evento que será acionado quando um dos delimitadores for encontrado.",
  "serial.onDataReceived|param|delimiters": "os caracteres a serem correspondidos com os caracteres recebidos.",
  "serial.readBuffer": "Lê múltiplos caracteres do buffer de recepção. Aguarda até que haja caracteres suficientes.",
  "serial.readBuffer|param|length": "tamanho padrão do buffer, por exemplo: 64",
  "serial.readLine": "Lê uma linha de texto da porta serial.",
  "serial.readString": "Lê os dados recebidos e guardados no buffer, como uma string",
  "serial.readUntil": "Lê uma linha de texto da porta serial e retorna o buffer quando o delimitador é encontrado.",
  "serial.readUntil|param|delimiter": "delimitador de texto que separa cada bloco de texto",
  "serial.redirect": "Define a entrada e saída serial para utilizar pinos no lugar da conexão USB.",
  "serial.redirectToUSB": "Direciona a entrada e saída serial para utilizar a conexão USB.",
  "serial.redirect|param|rate": "a nova taxa de transmissão. p.ex.: 115200",
  "serial.redirect|param|rx": "o novo pino de recepção, por exemplo: SerialPin.P1",
  "serial.redirect|param|tx": "os novos pinos de transmissão, por exemplo: SerialPin.P0",
  "serial.writeBuffer": "Envia um buffer através da conexão serial",
  "serial.writeLine": "Escreve uma linha de texto na porta serial",
  "serial.writeNumber": "Escreve um valor numérico na porta serial",
  "serial.writeNumbers": "Escreve um array de valores numéricos como CSV na porta serial",
  "serial.writeString": "Escreve uma string através da conexão Serial.",
  "serial.writeValue": "Escreve um par ``nome: valor`` como uma linha na porta serial.",
  "serial.writeValue|param|name": "nome do fluxo de valores, por exemplo: x",
  "serial.writeValue|param|value": "escrever"
}
